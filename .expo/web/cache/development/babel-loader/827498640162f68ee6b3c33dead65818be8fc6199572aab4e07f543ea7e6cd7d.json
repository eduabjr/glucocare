{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-get-random-values';\nimport React, { useState, useEffect, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign, Feather } from '@expo/vector-icons';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport * as SecureStore from 'expo-secure-store';\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as Crypto from 'expo-crypto';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showConfirmPassword = _useState0[0],\n    setShowConfirmPassword = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    emailError = _useState10[0],\n    setEmailError = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    passwordError = _useState12[0],\n    setPasswordError = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    confirmPasswordError = _useState14[0],\n    setConfirmPasswordError = _useState14[1];\n  var _useState15 = useState(true),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isButtonDisabled = _useState16[0],\n    setIsButtonDisabled = _useState16[1];\n  var appState = useRef(AppState.currentState);\n  var lastActiveTime = useRef(Date.now());\n  var _Google$useAuthReques = Google.useAuthRequest({\n      expoClientId: '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com',\n      webClientId: '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com',\n      androidClientId: 'SUA_ANDROID_CLIENT_ID_AQUI.apps.googleusercontent.com',\n      scopes: ['profile', 'email']\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  useEffect(function () {\n    var handleGoogleAuth = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if ((response == null ? void 0 : response.type) === 'success' && response.authentication) {\n          try {\n            var token = response.authentication.accessToken;\n            yield SecureStore.setItemAsync('google_token', token);\n            var userInfoResponse = yield fetch('https://www.googleapis.com/userinfo/v2/me', {\n              headers: {\n                Authorization: \"Bearer \" + token\n              }\n            });\n            var user = yield userInfoResponse.json();\n            var profile = {\n              id: uuidv4(),\n              full_name: user.name || 'Usuário Google',\n              email: user.email,\n              provider: 'google',\n              createdAt: new Date().toISOString(),\n              birth_date: new Date(1990, 0, 1).toISOString(),\n              height: null,\n              weight: null,\n              restriction: ''\n            };\n            yield SecureStore.setItemAsync('registered_email', user.email);\n            yield SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n            yield SecureStore.setItemAsync('biometric_enabled', 'false');\n            Alert.alert('Sucesso', 'Conta criada com Google!');\n            navigation.replace('ProfileSetup');\n          } catch (err) {\n            console.error('Erro ao registrar com Google:', err);\n            Alert.alert('Erro', 'Não foi possível registrar com Google.');\n          }\n        } else if ((response == null ? void 0 : response.type) === 'error') {\n          Alert.alert('Erro', 'O login com Google falhou ou foi cancelado.');\n          console.log('Resposta de erro do Google:', response);\n        }\n      });\n      return function handleGoogleAuth() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    handleGoogleAuth();\n  }, [response]);\n  var handleGoogleSignIn = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield promptAsync();\n      } catch (error) {\n        console.error('Erro ao iniciar o prompt do Google:', error);\n        Alert.alert('Erro', 'Não foi possível iniciar o login com Google.');\n      }\n    });\n    return function handleGoogleSignIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var validateEmail = function validateEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n  var validatePassword = function validatePassword(pw) {\n    return pw.length >= 8 && /[A-Z]/.test(pw) && /[a-z]/.test(pw) && /\\d/.test(pw) && /[@$!%*?&]/.test(pw);\n  };\n  var handleRegister = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        setEmailError('');\n        setPasswordError('');\n        setConfirmPasswordError('');\n        if (!email || !password || !confirmPassword) {\n          return Alert.alert('Campos obrigatórios', 'Preencha todos os campos.');\n        }\n        if (!validateEmail(email)) {\n          setEmailError('Digite um e-mail válido.');\n          return;\n        }\n        if (!validatePassword(password)) {\n          setPasswordError('A senha deve ter 8+ caracteres, Maiúscula, minúscula, número e símbolo.');\n          return;\n        }\n        if (password !== confirmPassword) {\n          setConfirmPasswordError('As senhas não coincidem.');\n          return;\n        }\n        var passwordHash = yield Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256, password);\n        var profile = {\n          id: uuidv4(),\n          full_name: 'Usuário GlucoCare',\n          email: email.trim(),\n          provider: 'manual',\n          createdAt: new Date().toISOString(),\n          birth_date: new Date(1990, 0, 1).toISOString(),\n          height: null,\n          weight: null,\n          restriction: ''\n        };\n        yield SecureStore.setItemAsync('registered_email', email.trim());\n        yield SecureStore.setItemAsync('registered_password', passwordHash);\n        yield SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n        try {\n          var hasHardware = yield LocalAuthentication.hasHardwareAsync();\n          var supported = yield LocalAuthentication.supportedAuthenticationTypesAsync();\n          yield SecureStore.setItemAsync('biometric_enabled', hasHardware && supported.length > 0 ? 'true' : 'false');\n        } catch (_unused) {\n          yield SecureStore.setItemAsync('biometric_enabled', 'false');\n        }\n        Alert.alert('Sucesso', 'Conta criada com sucesso!');\n        navigation.replace('ProfileSetup');\n      } catch (err) {\n        console.error('handleRegister - erro:', err);\n        Alert.alert('Erro', 'Não foi possível registrar sua conta.');\n      }\n    });\n    return function handleRegister() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var subscription = AppState.addEventListener('change', function (nextState) {\n      if (appState.current === 'active' && nextState === 'background') {\n        lastActiveTime.current = Date.now();\n      }\n      if (appState.current.match(/background|inactive/) && nextState === 'active') {\n        var inactiveTime = Date.now() - lastActiveTime.current;\n        if (inactiveTime > 5 * 60 * 1000) {\n          Alert.alert('Sessão expirada', 'Faça login novamente.');\n          navigation.replace('Login');\n        }\n      }\n      appState.current = nextState;\n    });\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  useEffect(function () {\n    var isFormValid = validateEmail(email) && validatePassword(password) && password === confirmPassword;\n    setIsButtonDisabled(!isFormValid);\n  }, [email, password, confirmPassword]);\n  return _jsx(SafeAreaView, {\n    style: styles.safe,\n    children: _jsx(KeyboardAvoidingView, {\n      style: {\n        flex: 1\n      },\n      behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: styles.container,\n        keyboardShouldPersistTaps: \"handled\",\n        children: [_jsx(AntDesign, {\n          name: \"adduser\",\n          size: 64,\n          color: \"#2563eb\",\n          style: {\n            alignSelf: 'center',\n            marginBottom: 20\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"Criar Conta\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Preencha os dados ou use sua conta Google\"\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.googleButton, !request && {\n            opacity: 0.5\n          }],\n          disabled: !request,\n          onPress: handleGoogleSignIn,\n          children: [_jsx(AntDesign, {\n            name: \"google\",\n            size: 20,\n            color: \"#DB4437\",\n            style: {\n              marginRight: 8\n            }\n          }), _jsx(Text, {\n            style: styles.googleText,\n            children: \"Cadastrar com Google\"\n          })]\n        }), _jsx(Text, {\n          style: styles.orText,\n          children: \"ou\"\n        }), _jsx(TextInput, {\n          style: [styles.input, emailError ? styles.inputError : null],\n          placeholder: \"E-mail\",\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\",\n          value: email,\n          onChangeText: setEmail\n        }), emailError ? _jsx(Text, {\n          style: styles.errorText,\n          children: emailError\n        }) : null, _jsxs(View, {\n          style: styles.passwordContainer,\n          children: [_jsx(TextInput, {\n            style: [styles.input, passwordError ? styles.inputError : null, {\n              paddingRight: 50\n            }],\n            placeholder: \"Senha\",\n            secureTextEntry: !showPassword,\n            value: password,\n            onChangeText: setPassword\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowPassword(!showPassword);\n            },\n            style: styles.eyeIcon,\n            children: _jsx(Feather, {\n              name: showPassword ? 'eye' : 'eye-off',\n              size: 24,\n              color: \"#6b7280\"\n            })\n          })]\n        }), passwordError ? _jsx(Text, {\n          style: styles.errorText,\n          children: passwordError\n        }) : null, _jsxs(View, {\n          style: styles.passwordContainer,\n          children: [_jsx(TextInput, {\n            style: [styles.input, confirmPasswordError ? styles.inputError : null, {\n              paddingRight: 50\n            }],\n            placeholder: \"Confirmar Senha\",\n            secureTextEntry: !showConfirmPassword,\n            value: confirmPassword,\n            onChangeText: setConfirmPassword\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowConfirmPassword(!showConfirmPassword);\n            },\n            style: styles.eyeIcon,\n            children: _jsx(Feather, {\n              name: showConfirmPassword ? 'eye' : 'eye-off',\n              size: 24,\n              color: \"#6b7280\"\n            })\n          })]\n        }), confirmPasswordError ? _jsx(Text, {\n          style: styles.errorText,\n          children: confirmPasswordError\n        }) : null, _jsx(TouchableOpacity, {\n          style: [styles.buttonPrimary, isButtonDisabled && {\n            opacity: 0.5\n          }],\n          onPress: handleRegister,\n          disabled: isButtonDisabled,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Registrar\"\n          })\n        }), _jsxs(Text, {\n          style: styles.loginText,\n          children: [\"J\\xE1 tem uma conta?\", ' ', _jsx(Text, {\n            style: styles.loginLink,\n            onPress: function onPress() {\n              return navigation.navigate('Login');\n            },\n            children: \"Entrar\"\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: '#f0f6ff'\n  },\n  container: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '700',\n    textAlign: 'center',\n    color: '#111827'\n  },\n  subtitle: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#6b7280',\n    marginBottom: 20\n  },\n  googleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n    backgroundColor: '#fff',\n    paddingVertical: 14,\n    borderRadius: 10,\n    justifyContent: 'center',\n    marginBottom: 16\n  },\n  googleText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#111'\n  },\n  orText: {\n    textAlign: 'center',\n    color: '#6b7280',\n    marginVertical: 12\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n    borderRadius: 10,\n    padding: 14,\n    backgroundColor: '#fff',\n    fontSize: 15,\n    marginBottom: 8,\n    color: '#111827',\n    width: '100%'\n  },\n  inputError: {\n    borderColor: 'red'\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 12,\n    marginBottom: 8\n  },\n  buttonPrimary: {\n    padding: 14,\n    borderRadius: 10,\n    backgroundColor: '#2563eb',\n    alignItems: 'center',\n    marginTop: 8\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n    fontSize: 16\n  },\n  loginText: {\n    textAlign: 'center',\n    marginTop: 16,\n    fontSize: 14,\n    color: '#4b5563'\n  },\n  loginLink: {\n    color: '#2563eb',\n    fontWeight: '600'\n  },\n  passwordContainer: {\n    width: '100%'\n  },\n  eyeIcon: {\n    position: 'absolute',\n    right: 10,\n    top: 10,\n    zIndex: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ScrollView","KeyboardAvoidingView","Platform","AppState","View","AntDesign","Feather","SafeAreaView","SecureStore","LocalAuthentication","WebBrowser","Google","Crypto","v4","uuidv4","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState0","showConfirmPassword","setShowConfirmPassword","_useState1","_useState10","emailError","setEmailError","_useState11","_useState12","passwordError","setPasswordError","_useState13","_useState14","confirmPasswordError","setConfirmPasswordError","_useState15","_useState16","isButtonDisabled","setIsButtonDisabled","appState","currentState","lastActiveTime","Date","now","_Google$useAuthReques","useAuthRequest","expoClientId","webClientId","androidClientId","scopes","_Google$useAuthReques2","request","response","promptAsync","handleGoogleAuth","_ref2","_asyncToGenerator","type","authentication","token","accessToken","setItemAsync","userInfoResponse","fetch","headers","Authorization","user","json","profile","id","full_name","name","provider","createdAt","toISOString","birth_date","height","weight","restriction","JSON","stringify","alert","replace","err","console","error","log","apply","arguments","handleGoogleSignIn","_ref3","validateEmail","test","validatePassword","pw","length","handleRegister","_ref4","passwordHash","digestStringAsync","CryptoDigestAlgorithm","SHA256","trim","hasHardware","hasHardwareAsync","supported","supportedAuthenticationTypesAsync","_unused","subscription","addEventListener","nextState","current","match","inactiveTime","remove","isFormValid","style","styles","safe","children","flex","behavior","OS","undefined","contentContainerStyle","container","keyboardShouldPersistTaps","size","color","alignSelf","marginBottom","title","subtitle","googleButton","opacity","disabled","onPress","marginRight","googleText","orText","input","inputError","placeholder","autoCapitalize","keyboardType","value","onChangeText","errorText","passwordContainer","paddingRight","secureTextEntry","eyeIcon","buttonPrimary","buttonText","loginText","loginLink","navigate","create","backgroundColor","flexGrow","justifyContent","padding","fontSize","fontWeight","textAlign","flexDirection","alignItems","borderWidth","borderColor","paddingVertical","borderRadius","marginVertical","width","marginTop","position","right","top","zIndex"],"sources":["C:/Users/Usuário/Desktop/glucocare/src/screens/RegisterScreen.tsx"],"sourcesContent":["import 'react-native-get-random-values';\nimport React, { useState, useEffect, useRef } from 'react';\nimport {\n    Text,\n    TextInput,\n    TouchableOpacity,\n    StyleSheet,\n    Alert,\n    ScrollView,\n    KeyboardAvoidingView,\n    Platform,\n    AppState,\n    View,\n} from 'react-native';\nimport { AntDesign, Feather } from '@expo/vector-icons';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport * as SecureStore from 'expo-secure-store';\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as Crypto from 'expo-crypto';\nimport { v4 as uuidv4 } from 'uuid';\n\nWebBrowser.maybeCompleteAuthSession();\n\n// 💡 Certifique-se de que esta tipagem esteja correta.\ninterface NavigationProp {\n    navigate: (screen: string) => void;\n    replace: (screen: string) => void;\n}\n\nexport default function RegisterScreen({ navigation }: { navigation: NavigationProp }) {\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\n    const [emailError, setEmailError] = useState<string>('');\n    const [passwordError, setPasswordError] = useState<string>('');\n    const [confirmPasswordError, setConfirmPasswordError] = useState<string>('');\n    const [isButtonDisabled, setIsButtonDisabled] = useState<boolean>(true);\n\n    const appState = useRef(AppState.currentState);\n    const lastActiveTime = useRef<number>(Date.now());\n\n    // --- Google OAuth Config\n    const [request, response, promptAsync] = Google.useAuthRequest({\n        expoClientId:\n            '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com',\n        webClientId:\n            '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com',\n        androidClientId:\n            'SUA_ANDROID_CLIENT_ID_AQUI.apps.googleusercontent.com', // ⚠️ Atenção: Substitua este Client ID\n        scopes: ['profile', 'email'],\n    });\n\n    // --- Handle Google Response\n    useEffect(() => {\n        const handleGoogleAuth = async () => {\n            if (response?.type === 'success' && response.authentication) {\n                try {\n                    const token = response.authentication.accessToken;\n                    await SecureStore.setItemAsync('google_token', token);\n\n                    const userInfoResponse = await fetch(\n                        'https://www.googleapis.com/userinfo/v2/me',\n                        {\n                            headers: { Authorization: `Bearer ${token}` },\n                        }\n                    );\n                    const user = await userInfoResponse.json();\n\n                    const profile = {\n                        id: uuidv4(),\n                        full_name: user.name || 'Usuário Google',\n                        email: user.email,\n                        provider: 'google',\n                        createdAt: new Date().toISOString(),\n                        birth_date: new Date(1990, 0, 1).toISOString(),\n                        height: null,\n                        weight: null,\n                        restriction: '',\n                    };\n\n                    await SecureStore.setItemAsync('registered_email', user.email);\n                    await SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n                    await SecureStore.setItemAsync('biometric_enabled', 'false');\n\n                    Alert.alert('Sucesso', 'Conta criada com Google!');\n                    navigation.replace('ProfileSetup');\n                } catch (err) {\n                    console.error('Erro ao registrar com Google:', err);\n                    Alert.alert('Erro', 'Não foi possível registrar com Google.');\n                }\n            } else if (response?.type === 'error') {\n                Alert.alert('Erro', 'O login com Google falhou ou foi cancelado.');\n                console.log('Resposta de erro do Google:', response);\n            }\n        };\n\n        handleGoogleAuth();\n    }, [response]);\n\n    // --- Função para chamar o prompt do Google\n    const handleGoogleSignIn = async () => {\n        try {\n            await promptAsync();\n        } catch (error) {\n            console.error('Erro ao iniciar o prompt do Google:', error);\n            Alert.alert('Erro', 'Não foi possível iniciar o login com Google.');\n        }\n    };\n\n    // --- Validadores\n    const validateEmail = (email: string) => /\\S+@\\S+\\.\\S+/.test(email);\n    const validatePassword = (pw: string) =>\n        pw.length >= 8 &&\n        /[A-Z]/.test(pw) &&\n        /[a-z]/.test(pw) &&\n        /\\d/.test(pw) &&\n        /[@$!%*?&]/.test(pw);\n\n    // --- Registro Manual\n    const handleRegister = async () => {\n        try {\n            setEmailError('');\n            setPasswordError('');\n            setConfirmPasswordError('');\n\n            if (!email || !password || !confirmPassword) {\n                return Alert.alert('Campos obrigatórios', 'Preencha todos os campos.');\n            }\n            if (!validateEmail(email)) {\n                setEmailError('Digite um e-mail válido.');\n                return;\n            }\n            if (!validatePassword(password)) {\n                setPasswordError('A senha deve ter 8+ caracteres, Maiúscula, minúscula, número e símbolo.');\n                return;\n            }\n            if (password !== confirmPassword) {\n                setConfirmPasswordError('As senhas não coincidem.');\n                return;\n            }\n\n            const passwordHash = await Crypto.digestStringAsync(\n                Crypto.CryptoDigestAlgorithm.SHA256,\n                password\n            );\n\n            const profile = {\n                id: uuidv4(),\n                full_name: 'Usuário GlucoCare',\n                email: email.trim(),\n                provider: 'manual',\n                createdAt: new Date().toISOString(),\n                birth_date: new Date(1990, 0, 1).toISOString(),\n                height: null,\n                weight: null,\n                restriction: '',\n            };\n\n            await SecureStore.setItemAsync('registered_email', email.trim());\n            await SecureStore.setItemAsync('registered_password', passwordHash);\n            await SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n\n            try {\n                const hasHardware = await LocalAuthentication.hasHardwareAsync();\n                const supported =\n                    await LocalAuthentication.supportedAuthenticationTypesAsync();\n                await SecureStore.setItemAsync(\n                    'biometric_enabled',\n                    hasHardware && supported.length > 0 ? 'true' : 'false'\n                );\n            } catch {\n                await SecureStore.setItemAsync('biometric_enabled', 'false');\n            }\n\n            Alert.alert('Sucesso', 'Conta criada com sucesso!');\n            navigation.replace('ProfileSetup');\n        } catch (err) {\n            console.error('handleRegister - erro:', err);\n            Alert.alert('Erro', 'Não foi possível registrar sua conta.');\n        }\n    };\n\n    // --- Sessão expira após 5 min\n    useEffect(() => {\n        const subscription = AppState.addEventListener('change', (nextState) => {\n            if (appState.current === 'active' && nextState === 'background') {\n                lastActiveTime.current = Date.now();\n            }\n\n            if (\n                appState.current.match(/background|inactive/) &&\n                nextState === 'active'\n            ) {\n                const inactiveTime = Date.now() - lastActiveTime.current;\n                if (inactiveTime > 5 * 60 * 1000) {\n                    Alert.alert('Sessão expirada', 'Faça login novamente.');\n                    navigation.replace('Login');\n                }\n            }\n\n            appState.current = nextState;\n        });\n\n        return () => subscription.remove();\n    }, []);\n\n    // --- Desabilitar botão de registro até que todos os campos sejam válidos\n    useEffect(() => {\n        const isFormValid =\n            validateEmail(email) &&\n            validatePassword(password) &&\n            password === confirmPassword;\n        setIsButtonDisabled(!isFormValid);\n    }, [email, password, confirmPassword]);\n\n    return (\n        <SafeAreaView style={styles.safe}>\n            <KeyboardAvoidingView\n                style={{ flex: 1 }}\n                behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n            >\n                <ScrollView\n                    contentContainerStyle={styles.container}\n                    keyboardShouldPersistTaps=\"handled\"\n                >\n                    <AntDesign\n                        name=\"adduser\"\n                        size={64}\n                        color=\"#2563eb\"\n                        style={{ alignSelf: 'center', marginBottom: 20 }}\n                    />\n\n                    <Text style={styles.title}>Criar Conta</Text>\n                    <Text style={styles.subtitle}>\n                        Preencha os dados ou use sua conta Google\n                    </Text>\n\n                    {/* Botão Google */}\n                    <TouchableOpacity\n                        style={[styles.googleButton, !request && { opacity: 0.5 }]}\n                        disabled={!request}\n                        onPress={handleGoogleSignIn}\n                    >\n                        <AntDesign\n                            name=\"google\"\n                            size={20}\n                            color=\"#DB4437\"\n                            style={{ marginRight: 8 }}\n                        />\n                        <Text style={styles.googleText}>Cadastrar com Google</Text>\n                    </TouchableOpacity>\n\n                    <Text style={styles.orText}>ou</Text>\n\n                    {/* Inputs */}\n                    <TextInput\n                        style={[styles.input, emailError ? styles.inputError : null]}\n                        placeholder=\"E-mail\"\n                        autoCapitalize=\"none\"\n                        keyboardType=\"email-address\"\n                        value={email}\n                        onChangeText={setEmail}\n                    />\n                    {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n\n                    <View style={styles.passwordContainer}>\n                        <TextInput\n                            style={[styles.input, passwordError ? styles.inputError : null, { paddingRight: 50 }]}\n                            placeholder=\"Senha\"\n                            secureTextEntry={!showPassword}\n                            value={password}\n                            onChangeText={setPassword}\n                        />\n                        <TouchableOpacity\n                            onPress={() => setShowPassword(!showPassword)}\n                            style={styles.eyeIcon}\n                        >\n                            <Feather\n                                name={showPassword ? 'eye' : 'eye-off'}\n                                size={24}\n                                color=\"#6b7280\" // Cor preta para o ícone\n                            />\n                        </TouchableOpacity>\n                    </View>\n                    {passwordError ? (\n                        <Text style={styles.errorText}>{passwordError}</Text>\n                    ) : null}\n\n                    <View style={styles.passwordContainer}>\n                        <TextInput\n                            style={[styles.input, confirmPasswordError ? styles.inputError : null, { paddingRight: 50 }]}\n                            placeholder=\"Confirmar Senha\"\n                            secureTextEntry={!showConfirmPassword}\n                            value={confirmPassword}\n                            onChangeText={setConfirmPassword}\n                        />\n                        <TouchableOpacity\n                            onPress={() => setShowConfirmPassword(!showConfirmPassword)}\n                            style={styles.eyeIcon}\n                        >\n                            <Feather\n                                name={showConfirmPassword ? 'eye' : 'eye-off'}\n                                size={24}\n                                color=\"#6b7280\"\n                            />\n                        </TouchableOpacity>\n                    </View>\n                    {confirmPasswordError ? (\n                        <Text style={styles.errorText}>{confirmPasswordError}</Text>\n                    ) : null}\n\n                    <TouchableOpacity\n                        style={[styles.buttonPrimary, isButtonDisabled && { opacity: 0.5 }]}\n                        onPress={handleRegister}\n                        disabled={isButtonDisabled}\n                    >\n                        <Text style={styles.buttonText}>Registrar</Text>\n                    </TouchableOpacity>\n\n                    <Text style={styles.loginText}>\n                        Já tem uma conta?{' '}\n                        <Text\n                            style={styles.loginLink}\n                            onPress={() => navigation.navigate('Login')}\n                        >\n                            Entrar\n                        </Text>\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n}\n\n// Estilos\nconst styles = StyleSheet.create({\n    safe: { flex: 1, backgroundColor: '#f0f6ff' },\n    container: { flexGrow: 1, justifyContent: 'center', padding: 24 },\n    title: {\n        fontSize: 24,\n        fontWeight: '700',\n        textAlign: 'center',\n        color: '#111827',\n    },\n    subtitle: {\n        fontSize: 14,\n        textAlign: 'center',\n        color: '#6b7280',\n        marginBottom: 20,\n    },\n    googleButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        borderWidth: 1,\n        borderColor: '#d1d5db',\n        backgroundColor: '#fff',\n        paddingVertical: 14,\n        borderRadius: 10,\n        justifyContent: 'center',\n        marginBottom: 16,\n    },\n    googleText: { fontSize: 16, fontWeight: '600', color: '#111' },\n    orText: { textAlign: 'center', color: '#6b7280', marginVertical: 12 },\n    input: {\n        borderWidth: 1,\n        borderColor: '#d1d5db',\n        borderRadius: 10,\n        padding: 14,\n        backgroundColor: '#fff',\n        fontSize: 15,\n        marginBottom: 8,\n        color: '#111827',\n        width: '100%',\n    },\n    inputError: {\n        borderColor: 'red',\n    },\n    errorText: {\n        color: 'red',\n        fontSize: 12,\n        marginBottom: 8,\n    },\n    buttonPrimary: {\n        padding: 14,\n        borderRadius: 10,\n        backgroundColor: '#2563eb',\n        alignItems: 'center',\n        marginTop: 8,\n    },\n    buttonText: { color: '#fff', fontWeight: '600', fontSize: 16 },\n    loginText: {\n        textAlign: 'center',\n        marginTop: 16,\n        fontSize: 14,\n        color: '#4b5563',\n    },\n    loginLink: { color: '#2563eb', fontWeight: '600' },\n    passwordContainer: {\n        // Estilos para o container de senha, se necessário, para alinhar o ícone\n        width: '100%',\n    },\n    eyeIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 10, // Ajusta a posição vertical dentro do input\n        zIndex: 1,\n    },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}