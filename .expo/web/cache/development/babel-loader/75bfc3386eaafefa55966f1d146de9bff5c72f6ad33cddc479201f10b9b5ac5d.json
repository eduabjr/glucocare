{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport * as SecureStore from 'expo-secure-store';\nimport { clearUser } from \"../services/dbService\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PROFILE_KEY = 'user_profile';\nvar GOOGLE_TOKEN_KEY = 'google_token';\nvar REGISTERED_EMAIL_KEY = 'registered_email';\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var checkAuthStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var storedProfile = yield SecureStore.getItemAsync(PROFILE_KEY);\n        if (storedProfile) {\n          var profile = JSON.parse(storedProfile);\n          setIsAuthenticated(true);\n          setUser(profile);\n        } else {\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      } catch (error) {\n        console.error(\"Erro ao verificar status de autenticaÃ§Ã£o:\", error);\n        setIsAuthenticated(false);\n        setUser(null);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (profile) {\n      try {\n        yield SecureStore.setItemAsync(PROFILE_KEY, JSON.stringify(profile));\n        setIsAuthenticated(true);\n        setUser(profile);\n      } catch (error) {\n        console.error(\"Erro ao executar login:\", error);\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    });\n    return function login(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield SecureStore.deleteItemAsync(PROFILE_KEY);\n        yield SecureStore.deleteItemAsync(GOOGLE_TOKEN_KEY);\n        yield SecureStore.deleteItemAsync(REGISTERED_EMAIL_KEY);\n        yield SecureStore.deleteItemAsync('registered_password');\n        yield clearUser();\n        setIsAuthenticated(false);\n        setUser(null);\n      } catch (error) {\n        console.error(\"Erro durante o logout:\", error);\n      }\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkAuthStatus();\n  }, []);\n  return _jsxs(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      user: user,\n      isLoading: isLoading,\n      login: login,\n      logout: logout\n    },\n    children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", children, \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","SecureStore","clearUser","jsxs","_jsxs","PROFILE_KEY","GOOGLE_TOKEN_KEY","REGISTERED_EMAIL_KEY","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","user","setUser","_useState5","_useState6","isLoading","setIsLoading","checkAuthStatus","_ref2","_asyncToGenerator","storedProfile","getItemAsync","profile","JSON","parse","error","console","apply","arguments","login","_ref3","setItemAsync","stringify","_x","logout","_ref4","deleteItemAsync","Provider","value","useAuth","context","Error"],"sources":["C:/Users/UsuÃ¡rio/Desktop/glucocare/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport * as SecureStore from 'expo-secure-store';\n// âœ… CORREÃ‡ÃƒO 1: Ajustando o caminho da importaÃ§Ã£o para o nome real do arquivo de serviÃ§o.\nimport { UserProfile, getUser, clearUser } from '../services/dbService'; \n\n// --- Constantes de Armazenamento ---\nconst PROFILE_KEY = 'user_profile';\nconst GOOGLE_TOKEN_KEY = 'google_token';\n// âœ… CORREÃ‡ÃƒO 2: Definindo a constante que estava faltando\nconst REGISTERED_EMAIL_KEY = 'registered_email'; \n// A chave 'registered_password' Ã© perigosa, mas mantida para a limpeza.\n\n// 1. DefiniÃ§Ã£o da Tipagem do Contexto\ninterface AuthContextType {\nÂ  Â  isAuthenticated: boolean;\nÂ  Â  user: UserProfile | null; // Adicionando o perfil do usuÃ¡rio\nÂ  Â  isLoading: boolean; // Estado essencial para evitar tela de flash\nÂ  Â  login: (profile: UserProfile) => Promise<void>; // Login precisa de dados de perfil\nÂ  Â  logout: () => Promise<void>;\n}\n\n// 2. CriaÃ§Ã£o do Contexto\n// Inicializado com um valor que satisfaz o AuthContextType, com estados iniciais\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// 3. O Provedor (Componente que irÃ¡ encapsular o App)\ninterface AuthProviderProps {\nÂ  Â  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\nÂ  Â  const [isAuthenticated, setIsAuthenticated] = useState(false);\nÂ  Â  const [user, setUser] = useState<UserProfile | null>(null);\nÂ  Â  const [isLoading, setIsLoading] = useState(true); // ComeÃ§a como true\n\nÂ  Â  // FunÃ§Ã£o para verificar o estado de login no armazenamento seguro\nÂ  Â  const checkAuthStatus = async () => {\nÂ  Â  Â  Â  try {\nÂ  Â  Â  Â  Â  Â  // Tenta obter o perfil do SecureStore\nÂ  Â  Â  Â  Â  Â  const storedProfile = await SecureStore.getItemAsync(PROFILE_KEY);\nÂ  Â  Â  Â  Â  Â  \nÂ  Â  Â  Â  Â  Â  if (storedProfile) {\nÂ  Â  Â  Â  Â  Â  Â  Â  const profile: UserProfile = JSON.parse(storedProfile);\nÂ  Â  Â  Â  Â  Â  Â  Â  \nÂ  Â  Â  Â  Â  Â  Â  Â  // Opcional: Verifica a consistÃªncia com o SQLite (se necessÃ¡rio)\nÂ  Â  Â  Â  Â  Â  Â  Â  // const localUser = await getUser(); // Removido erro 6133 'getUser' nÃ£o lido\nÂ  Â  Â  Â  Â  Â  Â  Â  \nÂ  Â  Â  Â  Â  Â  Â  Â  // Se o SecureStore tem dados, considera autenticado\nÂ  Â  Â  Â  Â  Â  Â  Â  setIsAuthenticated(true);\nÂ  Â  Â  Â  Â  Â  Â  Â  setUser(profile);\nÂ  Â  Â  Â  Â  Â  } else {\nÂ  Â  Â  Â  Â  Â  Â  Â  setIsAuthenticated(false);\nÂ  Â  Â  Â  Â  Â  Â  Â  setUser(null);\nÂ  Â  Â  Â  Â  Â  }\nÂ  Â  Â  Â  } catch (error) {\nÂ  Â  Â  Â  Â  Â  console.error(\"Erro ao verificar status de autenticaÃ§Ã£o:\", error);\nÂ  Â  Â  Â  Â  Â  setIsAuthenticated(false);\nÂ  Â  Â  Â  Â  Â  setUser(null);\nÂ  Â  Â  Â  } finally {\nÂ  Â  Â  Â  Â  Â  setIsLoading(false); // Terminou a verificaÃ§Ã£o, pode renderizar a navegaÃ§Ã£o\nÂ  Â  Â  Â  }\nÂ  Â  };\n\nÂ  Â  /**\nÂ  Â  Â * Define o usuÃ¡rio como logado e armazena o perfil no SecureStore.\nÂ  Â  Â * @param profile O objeto completo do UserProfile.\nÂ  Â  Â */\nÂ  Â  const login = async (profile: UserProfile) => {\nÂ  Â  Â  Â  try {\nÂ  Â  Â  Â  Â  Â  // 1. Armazena o perfil completo (pode incluir tokens ou IDs necessÃ¡rios)\nÂ  Â  Â  Â  Â  Â  await SecureStore.setItemAsync(PROFILE_KEY, JSON.stringify(profile));\nÂ  Â  Â  Â  Â  Â  \nÂ  Â  Â  Â  Â  Â  // 2. Atualiza o estado\nÂ  Â  Â  Â  Â  Â  setIsAuthenticated(true);\nÂ  Â  Â  Â  Â  Â  setUser(profile);\nÂ  Â  Â  Â  } catch (error) {\nÂ  Â  Â  Â  Â  Â  console.error(\"Erro ao executar login:\", error);\nÂ  Â  Â  Â  Â  Â  // Reverter estado se falhar ao armazenar (evitar inconsistÃªncia)\nÂ  Â  Â  Â  Â  Â  setIsAuthenticated(false);\nÂ  Â  Â  Â  Â  Â  setUser(null);\nÂ  Â  Â  Â  }\nÂ  Â  };\n\nÂ  Â  /**\nÂ  Â  Â * Executa o logout, limpa SecureStore e limpa dados locais (SQLite).\nÂ  Â  Â */\nÂ  Â  const logout = async () => {\nÂ  Â  Â  Â  try {\nÂ  Â  Â  Â  Â  Â  // 1. Limpeza do SecureStore\nÂ  Â  Â  Â  Â  Â  await SecureStore.deleteItemAsync(PROFILE_KEY);\nÂ  Â  Â  Â  Â  Â  await SecureStore.deleteItemAsync(GOOGLE_TOKEN_KEY);\nÂ  Â  Â  Â  Â  Â  await SecureStore.deleteItemAsync(REGISTERED_EMAIL_KEY); \nÂ  Â  Â  Â  Â  Â  await SecureStore.deleteItemAsync('registered_password'); \nÂ  Â  Â  Â  Â  Â  \nÂ  Â  Â  Â  Â  Â  // 2. Limpeza do SQLite (Usando a funÃ§Ã£o exportada do dbService)\nÂ  Â  Â  Â  Â  Â  await clearUser(); \n\nÂ  Â  Â  Â  Â  Â  // 3. Limpeza do estado\nÂ  Â  Â  Â  Â  Â  setIsAuthenticated(false);\nÂ  Â  Â  Â  Â  Â  setUser(null);\nÂ  Â  Â  Â  } catch (error) {\nÂ  Â  Â  Â  Â  Â  console.error(\"Erro durante o logout:\", error);\nÂ  Â  Â  Â  Â  Â  // NÃ£o fazemos re-throw para garantir que o estado local seja limpo, mesmo com erros de armazenamento\nÂ  Â  Â  Â  }\nÂ  Â  };\n\nÂ  Â  useEffect(() => {\nÂ  Â  Â  Â  // Verifica o estado inicial ao carregar o provedor\nÂ  Â  Â  Â  checkAuthStatus();\nÂ  Â  }, []);\n\nÂ  Â  // ğŸ’¡ A prop value agora inclui 'user' e 'isLoading'\nÂ  Â  return (\nÂ  Â  Â  Â  <AuthContext.Provider value={{ isAuthenticated, user, isLoading, login, logout }}>\nÂ  Â  Â  Â  Â  Â  {children}\nÂ  Â  Â  Â  </AuthContext.Provider>\nÂ  Â  );\n};\n\n// 4. O Hook Customizado\n/**\nÂ * Hook customizado para consumir o contexto de autenticaÃ§Ã£o.\nÂ */\nexport const useAuth = () => {\nÂ  Â  const context = useContext(AuthContext);\nÂ  Â  if (context === undefined) {\nÂ  Â  Â  Â  throw new Error('useAuth deve ser usado dentro de um AuthProvider');\nÂ  Â  }\nÂ  Â  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}