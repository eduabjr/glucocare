{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var handleSubmit = function handleSubmit() {\n    if (!email) {\n      Alert.alert(\"Erro\", \"Por favor, insira um e-mail.\");\n      return;\n    }\n    var emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailRegex.test(email)) {\n      Alert.alert(\"Erro\", \"Por favor, insira um e-mail v√°lido.\");\n      return;\n    }\n    setIsLoading(true);\n    setTimeout(function () {\n      setIsLoading(false);\n      Alert.alert(\"Link de redefini√ß√£o enviado\", \"Verifique seu e-mail para redefinir a senha.\");\n      navigation.navigate(\"Login\");\n    }, 2000);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.safe,\n    children: _jsx(View, {\n      style: styles.centered,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Esqueceu a senha?\"\n        }), _jsxs(View, {\n          style: styles.inputWrapper,\n          children: [_jsx(Feather, {\n            name: \"mail\",\n            size: 18,\n            color: \"#9ca3af\",\n            style: styles.inputIcon\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Digite seu e-mail\",\n            autoCapitalize: \"none\",\n            keyboardType: \"email-address\",\n            value: email,\n            onChangeText: setEmail\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: styles.primaryButton,\n          onPress: handleSubmit,\n          disabled: isLoading,\n          children: isLoading ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"#fff\"\n          }) : _jsx(Text, {\n            style: styles.primaryText,\n            children: \"Enviar E-mail\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Login\");\n          },\n          children: _jsx(Text, {\n            style: styles.link,\n            children: \"Voltar para o login\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: \"#f0f6ff\"\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  card: {\n    width: \"100%\",\n    maxWidth: 380,\n    backgroundColor: \"#fff\",\n    borderRadius: 16,\n    padding: 24,\n    shadowColor: \"#000\",\n    shadowOpacity: 0.08,\n    shadowRadius: 8,\n    elevation: 4\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    marginBottom: 20,\n    color: \"#111827\"\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#d1d5db\",\n    borderRadius: 8,\n    marginBottom: 12,\n    paddingHorizontal: 12,\n    backgroundColor: \"#fff\"\n  },\n  inputIcon: {\n    marginRight: 8\n  },\n  input: {\n    flex: 1,\n    paddingVertical: 10,\n    fontSize: 15,\n    color: \"#111827\"\n  },\n  primaryButton: {\n    backgroundColor: \"#2563eb\",\n    padding: 14,\n    borderRadius: 8,\n    alignItems: \"center\",\n    marginTop: 8\n  },\n  primaryText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"600\"\n  },\n  link: {\n    textAlign: \"center\",\n    marginTop: 14,\n    fontSize: 14,\n    color: \"#4b5563\"\n  }\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","Feather","SafeAreaView","jsx","_jsx","jsxs","_jsxs","ForgotPasswordScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","isLoading","setIsLoading","handleSubmit","alert","emailRegex","test","setTimeout","navigate","style","styles","safe","children","centered","card","title","inputWrapper","name","size","color","inputIcon","input","placeholder","autoCapitalize","keyboardType","value","onChangeText","primaryButton","onPress","disabled","primaryText","link","create","flex","backgroundColor","justifyContent","alignItems","padding","width","maxWidth","borderRadius","shadowColor","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","textAlign","marginBottom","flexDirection","borderWidth","borderColor","paddingHorizontal","marginRight","paddingVertical","marginTop"],"sources":["C:/Users/Usu√°rio/Desktop/glucocare/src/screens/ForgotPasswordScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    View,\n    Text,\n    TextInput,\n    TouchableOpacity,\n    StyleSheet,\n    Alert,\n    ActivityIndicator,\n} from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n// üí° Importe as tipagens necess√°rias do React Navigation e do seu AppNavigator\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../navigation/RootNavigator\"; // Certifique-se de que este caminho est√° correto\n\n// üí° Defina o tipo de props usando as tipagens importadas\n// O segundo argumento, 'ForgotPassword', especifica que esta tela √© a rota \"ForgotPassword\"\ntype ForgotPasswordScreenProps = NativeStackScreenProps<RootStackParamList, 'ForgotPassword'>;\n\n\nconst ForgotPasswordScreen: React.FC<ForgotPasswordScreenProps> = ({ navigation }) => {\n    const [email, setEmail] = useState<string>(\"\");\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const handleSubmit = () => {\n        if (!email) {\n            Alert.alert(\"Erro\", \"Por favor, insira um e-mail.\");\n            return;\n        }\n\n        // Valida√ß√£o simples de e-mail\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n        if (!emailRegex.test(email)) {\n            Alert.alert(\"Erro\", \"Por favor, insira um e-mail v√°lido.\");\n            return;\n        }\n\n        setIsLoading(true);\n\n        // Aqui voc√™ pode integrar com sua l√≥gica de envio de e-mail (API call)\n        setTimeout(() => {\n            setIsLoading(false);\n            Alert.alert(\"Link de redefini√ß√£o enviado\", \"Verifique seu e-mail para redefinir a senha.\");\n            // Volta para a tela de login ap√≥s o envio (tipagem segura agora)\n            navigation.navigate(\"Login\"); \n        }, 2000); // Simula um atraso para mostrar o carregamento\n    };\n\n    return (\n        <SafeAreaView style={styles.safe}>\n            <View style={styles.centered}>\n                <View style={styles.card}>\n                    <Text style={styles.title}>Esqueceu a senha?</Text>\n\n                    <View style={styles.inputWrapper}>\n                        <Feather name=\"mail\" size={18} color=\"#9ca3af\" style={styles.inputIcon} />\n                        <TextInput\n                            style={styles.input}\n                            placeholder=\"Digite seu e-mail\"\n                            autoCapitalize=\"none\"\n                            keyboardType=\"email-address\"\n                            value={email}\n                            onChangeText={setEmail}\n                        />\n                    </View>\n\n                    <TouchableOpacity style={styles.primaryButton} onPress={handleSubmit} disabled={isLoading}>\n                        {isLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#fff\" />\n                        ) : (\n                            <Text style={styles.primaryText}>Enviar E-mail</Text>\n                        )}\n                    </TouchableOpacity>\n\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Login\")}>\n                        <Text style={styles.link}>Voltar para o login</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    safe: { flex: 1, backgroundColor: \"#f0f6ff\" },\n    centered: { flex: 1, justifyContent: \"center\", alignItems: \"center\", padding: 16 },\n    card: {\n        width: \"100%\",\n        maxWidth: 380,\n        backgroundColor: \"#fff\",\n        borderRadius: 16,\n        padding: 24,\n        shadowColor: \"#000\",\n        shadowOpacity: 0.08,\n        shadowRadius: 8,\n        elevation: 4,\n    },\n    title: { fontSize: 22, fontWeight: \"700\", textAlign: \"center\", marginBottom: 20, color: \"#111827\" },\n    inputWrapper: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        borderWidth: 1,\n        borderColor: \"#d1d5db\",\n        borderRadius: 8,\n        marginBottom: 12,\n        paddingHorizontal: 12,\n        backgroundColor: \"#fff\",\n    },\n    inputIcon: { marginRight: 8 },\n    input: { flex: 1, paddingVertical: 10, fontSize: 15, color: \"#111827\" },\n    primaryButton: {\n        backgroundColor: \"#2563eb\",\n        padding: 14,\n        borderRadius: 8,\n        alignItems: \"center\",\n        marginTop: 8,\n    },\n    primaryText: { color: \"#fff\", fontSize: 16, fontWeight: \"600\" },\n    link: { textAlign: \"center\", marginTop: 14, fontSize: 14, color: \"#4b5563\" },\n});\n\nexport default ForgotPasswordScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}