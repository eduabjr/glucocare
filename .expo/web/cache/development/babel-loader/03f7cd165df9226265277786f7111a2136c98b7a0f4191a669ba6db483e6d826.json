{"ast":null,"code":"'use strict';\n\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nexport var Descriptor = function () {\n  function Descriptor(nativeDescriptor, manager) {\n    _classCallCheck(this, Descriptor);\n    Object.assign(this, nativeDescriptor);\n    Object.defineProperty(this, '_manager', {\n      value: manager,\n      enumerable: false\n    });\n  }\n  return _createClass(Descriptor, [{\n    key: \"read\",\n    value: (function () {\n      var _read = _asyncToGenerator(function* (transactionId) {\n        return this._manager._readDescriptor(this.id, transactionId);\n      });\n      function read(_x) {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }())\n  }, {\n    key: \"write\",\n    value: (function () {\n      var _write = _asyncToGenerator(function* (valueBase64, transactionId) {\n        return this._manager._writeDescriptor(this.id, valueBase64, transactionId);\n      });\n      function write(_x2, _x3) {\n        return _write.apply(this, arguments);\n      }\n      return write;\n    }())\n  }]);\n}();","map":{"version":3,"names":["_asyncToGenerator","_classCallCheck","_createClass","Descriptor","nativeDescriptor","manager","Object","assign","defineProperty","value","enumerable","key","_read","transactionId","_manager","_readDescriptor","id","read","_x","apply","arguments","_write","valueBase64","_writeDescriptor","write","_x2","_x3"],"sources":["C:/Users/Usu√°rio/Desktop/glucocare/node_modules/react-native-ble-plx/src/Descriptor.js"],"sourcesContent":["// @flow\n'use strict'\n\nimport type { BleManager } from './BleManager'\nimport type { NativeDescriptor } from './BleModule'\nimport type { DeviceId, Identifier, UUID, TransactionId, Base64 } from './TypeDefinition'\n\n/**\n * Descriptor object.\n */\nexport class Descriptor implements NativeDescriptor {\n  /**\n   * Internal BLE Manager handle\n   * @private\n   */\n  _manager: BleManager\n  /**\n   * Descriptor unique identifier\n   */\n  id: Identifier\n  /**\n   * Descriptor UUID\n   */\n  uuid: UUID\n  /**\n   * Characteristic's ID to which descriptor belongs\n   */\n  characteristicID: Identifier\n  /**\n   * Characteristic's UUID to which descriptor belongs\n   */\n  characteristicUUID: UUID\n  /**\n   * Service's ID to which descriptor belongs\n   */\n  serviceID: Identifier\n  /**\n   * Service's UUID to which descriptor belongs\n   */\n  serviceUUID: UUID\n  /**\n   * Device's ID to which descriptor belongs\n   */\n  deviceID: DeviceId\n  /**\n   * Descriptor value if present\n   */\n  value: ?Base64\n\n  /**\n   * Private constructor used to create instance of {@link Descriptor}.\n   * @param {NativeDescriptor} nativeDescriptor NativeDescriptor\n   * @param {BleManager} manager BleManager\n   * @private\n   */\n  constructor(nativeDescriptor: NativeDescriptor, manager: BleManager) {\n    Object.assign(this, nativeDescriptor)\n    Object.defineProperty(this, '_manager', { value: manager, enumerable: false })\n  }\n\n  /**\n   * {@link #blemanagerreaddescriptorfordevice|bleManager.readDescriptorForDevice()} with partially filled arguments.\n   *\n   * @param {?TransactionId} transactionId optional `transactionId` which can be used in\n   * {@link #blemanagercanceltransaction|cancelTransaction()} function.\n   * @returns {Promise<Descriptor>} Promise which emits first {@link Descriptor} object matching specified\n   * UUID paths. Latest value of {@link Descriptor} will be stored inside returned object.\n   */\n  async read(transactionId: ?TransactionId): Promise<Descriptor> {\n    return this._manager._readDescriptor(this.id, transactionId)\n  }\n\n  /**\n   * {@link #blemanagerwritedescriptorfordevice|bleManager.writeDescriptorForDevice()} with partially filled arguments.\n   *\n   * @param {Base64} valueBase64 Value to be set coded in Base64\n   * @param {?TransactionId} transactionId Transaction handle used to cancel operation\n   * @returns {Promise<Descriptor>} Descriptor which saved passed value.\n   */\n  async write(valueBase64: Base64, transactionId: ?TransactionId): Promise<Descriptor> {\n    return this._manager._writeDescriptor(this.id, valueBase64, transactionId)\n  }\n}\n"],"mappings":"AACA,YAAY;;AAAA,OAAAA,iBAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,YAAA;AASZ,WAAaC,UAAU;EA6CrB,SAAAA,WAAYC,gBAAkC,EAAEC,OAAmB,EAAE;IAAAJ,eAAA,OAAAE,UAAA;IACnEG,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,gBAAgB,CAAC;IACrCE,MAAM,CAACE,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE;MAAEC,KAAK,EAAEJ,OAAO;MAAEK,UAAU,EAAE;IAAM,CAAC,CAAC;EAChF;EAAC,OAAAR,YAAA,CAAAC,UAAA;IAAAQ,GAAA;IAAAF,KAAA;MAAA,IAAAG,KAAA,GAAAZ,iBAAA,CAUD,WAAWa,aAA6B,EAAuB;QAC7D,OAAO,IAAI,CAACC,QAAQ,CAACC,eAAe,CAAC,IAAI,CAACC,EAAE,EAAEH,aAAa,CAAC;MAC9D,CAAC;MAAA,SAFKI,IAAIA,CAAAC,EAAA;QAAA,OAAAN,KAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAJH,IAAI;IAAA;EAAA;IAAAN,GAAA;IAAAF,KAAA;MAAA,IAAAY,MAAA,GAAArB,iBAAA,CAWV,WAAYsB,WAAmB,EAAET,aAA6B,EAAuB;QACnF,OAAO,IAAI,CAACC,QAAQ,CAACS,gBAAgB,CAAC,IAAI,CAACP,EAAE,EAAEM,WAAW,EAAET,aAAa,CAAC;MAC5E,CAAC;MAAA,SAFKW,KAAKA,CAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAL,MAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAALI,KAAK;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}