{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport * as SecureStore from 'expo-secure-store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var checkAndSetLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var profile = yield SecureStore.getItemAsync('user_profile');\n        setIsAuthenticated(!!profile);\n      } catch (error) {\n        console.error(\"Erro ao verificar SecureStore:\", error);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function checkAndSetLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield checkAndSetLogin();\n    });\n    return function login() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield SecureStore.deleteItemAsync('user_profile');\n      yield SecureStore.deleteItemAsync('google_token');\n      yield SecureStore.deleteItemAsync('registered_email');\n      yield SecureStore.deleteItemAsync('registered_password');\n      yield SecureStore.deleteItemAsync('biometric_enabled');\n      setIsAuthenticated(false);\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkAndSetLogin();\n  }, []);\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      loading: loading,\n      login: login,\n      logout: logout\n    },\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","SecureStore","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","loading","setLoading","checkAndSetLogin","_ref2","_asyncToGenerator","profile","getItemAsync","error","console","apply","arguments","login","_ref3","logout","_ref4","deleteItemAsync","Provider","value","useAuth","context","Error"],"sources":["C:/Users/Usu√°rio/Desktop/glucocare/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport * as SecureStore from 'expo-secure-store';\n\n// 1. Defini√ß√£o da Tipagem do Contexto (Corrigindo login e adicionando loading)\ninterface AuthContextType {\n    isAuthenticated: boolean;\n    loading: boolean; ¬† ¬† ¬† ¬†// üöÄ Adicionado loading para o RootNavigator\n    login: () => Promise<void>; // ‚úÖ Assinatura Simples: N√£o requer argumentos\n    logout: () => Promise<void>;\n}\n\n// 2. Cria√ß√£o do Contexto\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n    children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(true); // üöÄ Inicializa como true\n\n    // Fun√ß√£o auxiliar para verificar o perfil no SecureStore\n    const checkAndSetLogin = async () => {\n        try {\n            const profile = await SecureStore.getItemAsync('user_profile');\n            // !!profile retorna true se a string n√£o for nula ou vazia\n            setIsAuthenticated(!!profile);\n        } catch (error) {\n            console.error(\"Erro ao verificar SecureStore:\", error);\n            setIsAuthenticated(false);\n        } finally {\n            // Garante que o estado de loading seja desligado, mesmo em caso de erro\n            setLoading(false); \n        }\n    };\n\n    // Fun√ß√£o chamada pelo LoginScreen. Simplesmente verifica se o perfil est√° l√°.\n    const login = async () => {\n        await checkAndSetLogin(); \n    };\n\n    const logout = async () => {\n        // L√≥gica de limpeza\n        await SecureStore.deleteItemAsync('user_profile');\n        await SecureStore.deleteItemAsync('google_token');\n        await SecureStore.deleteItemAsync('registered_email');\n        await SecureStore.deleteItemAsync('registered_password');\n        await SecureStore.deleteItemAsync('biometric_enabled');\n        \n        setIsAuthenticated(false);\n    };\n\n    useEffect(() => {\n        // Verifica o estado inicial ao carregar o provedor\n        checkAndSetLogin();\n    }, []);\n\n    // 4. Retorna o valor do contexto (com o loading)\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, loading, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n// 5. O Hook Customizado (useAuth)\nexport const useAuth = (): AuthContextType => {\n    const context = useContext(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n    }\n    return context;\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAWjD,IAAMC,WAAW,GAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAMzE,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAChE,IAAAC,SAAA,GAA8CV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,IAAAI,UAAA,GAA8Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAG1B,IAAMG,gBAAgB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACjC,IAAI;QACA,IAAMC,OAAO,SAASpB,WAAW,CAACqB,YAAY,CAAC,cAAc,CAAC;QAE9DT,kBAAkB,CAAC,CAAC,CAACQ,OAAO,CAAC;MACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDV,kBAAkB,CAAC,KAAK,CAAC;MAC7B,CAAC,SAAS;QAENI,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAAA,gBAZKC,gBAAgBA,CAAA;MAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYrB;EAGD,IAAMC,KAAK;IAAA,IAAAC,KAAA,GAAAR,iBAAA,CAAG,aAAY;MACtB,MAAMF,gBAAgB,CAAC,CAAC;IAC5B,CAAC;IAAA,gBAFKS,KAAKA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAEV;EAED,IAAMG,MAAM;IAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,aAAY;MAEvB,MAAMnB,WAAW,CAAC8B,eAAe,CAAC,cAAc,CAAC;MACjD,MAAM9B,WAAW,CAAC8B,eAAe,CAAC,cAAc,CAAC;MACjD,MAAM9B,WAAW,CAAC8B,eAAe,CAAC,kBAAkB,CAAC;MACrD,MAAM9B,WAAW,CAAC8B,eAAe,CAAC,qBAAqB,CAAC;MACxD,MAAM9B,WAAW,CAAC8B,eAAe,CAAC,mBAAmB,CAAC;MAEtDlB,kBAAkB,CAAC,KAAK,CAAC;IAC7B,CAAC;IAAA,gBATKgB,MAAMA,CAAA;MAAA,OAAAC,KAAA,CAAAL,KAAA,OAAAC,SAAA;IAAA;EAAA,GASX;EAED1B,SAAS,CAAC,YAAM;IAEZkB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAGN,OACIf,IAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAErB,eAAe,EAAfA,eAAe;MAAEI,OAAO,EAAPA,OAAO;MAAEW,KAAK,EAALA,KAAK;MAAEE,MAAM,EAANA;IAAO,CAAE;IAAArB,QAAA,EACpEA;EAAQ,CACS,CAAC;AAE/B,CAAC;AAGD,OAAO,IAAM0B,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAA0B;EAC1C,IAAMC,OAAO,GAAGrC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI+B,OAAO,KAAK9B,SAAS,EAAE;IACvB,MAAM,IAAI+B,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}