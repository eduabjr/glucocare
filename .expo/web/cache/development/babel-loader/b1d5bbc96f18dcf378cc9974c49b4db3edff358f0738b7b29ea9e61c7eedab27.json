{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport 'react-native-get-random-values';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign, Feather } from '@expo/vector-icons';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport * as SecureStore from 'expo-secure-store';\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { auth, db } from \"../config/firebase\";\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, signInWithCredential, sendEmailVerification } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar usePasswordValidation = function usePasswordValidation(password) {\n  var rules = useMemo(function () {\n    return {\n      length: password.length >= 8,\n      uppercase: /[A-Z]/.test(password),\n      lowercase: /[a-z]/.test(password),\n      number: /\\d/.test(password),\n      specialChar: /[^A-Za-z0-9\\s]/.test(password)\n    };\n  }, [password]);\n  var isPasswordValid = Object.values(rules).every(Boolean);\n  return {\n    rules: rules,\n    isPasswordValid: isPasswordValid\n  };\n};\nvar RequirementItem = function RequirementItem(_ref) {\n  var met = _ref.met,\n    label = _ref.label;\n  var color = met ? '#10b981' : '#ef4444';\n  var icon = met ? 'check' : 'x';\n  return _jsxs(View, {\n    style: validationStyles.itemContainer,\n    children: [_jsx(Feather, {\n      name: icon,\n      size: 14,\n      color: color,\n      style: {\n        marginRight: 6\n      }\n    }), _jsx(Text, {\n      style: [validationStyles.itemText, {\n        color: color\n      }],\n      children: label\n    })]\n  });\n};\nvar PasswordRequirements = function PasswordRequirements(_ref2) {\n  var rules = _ref2.rules;\n  return _jsxs(View, {\n    style: validationStyles.container,\n    children: [_jsx(Text, {\n      style: validationStyles.title,\n      children: \"Certifique-se de que sua nova senha cont\\xE9m\"\n    }), _jsx(RequirementItem, {\n      met: rules.length,\n      label: \"No m\\xEDnimo 8 d\\xEDgitos\"\n    }), _jsx(RequirementItem, {\n      met: rules.uppercase,\n      label: \"Pelo menos 1 letra mai\\xFAscula (A\\u2013Z)\"\n    }), _jsx(RequirementItem, {\n      met: rules.lowercase,\n      label: \"Pelo menos 1 letra min\\xFAscula (a\\u2013z)\"\n    }), _jsx(RequirementItem, {\n      met: rules.number,\n      label: \"Pelo menos 1 n\\xFAmero (0\\u20139)\"\n    }), _jsx(RequirementItem, {\n      met: rules.specialChar,\n      label: \"Pelo menos 1 caractere especial (ex.: !@#$%^&*)\"\n    })]\n  });\n};\nfunction syncUserProfileToFirestore(_x, _x2) {\n  return _syncUserProfileToFirestore.apply(this, arguments);\n}\nfunction _syncUserProfileToFirestore() {\n  _syncUserProfileToFirestore = _asyncToGenerator(function* (uid, profile) {\n    try {\n      var userRef = doc(db, 'users', uid);\n      yield setDoc(userRef, _objectSpread(_objectSpread({}, profile), {}, {\n        uid: uid,\n        updatedAt: new Date().toISOString()\n      }), {\n        merge: true\n      });\n      console.log(\"Perfil do usu\\xE1rio \" + uid + \" sincronizado com sucesso no Firestore.\");\n    } catch (error) {\n      console.error(\"Erro ao sincronizar perfil do usuário no Firestore:\", error);\n      throw new Error('Falha ao salvar o perfil na nuvem.');\n    }\n  });\n  return _syncUserProfileToFirestore.apply(this, arguments);\n}\nfunction sendVerificationEmail(_x3) {\n  return _sendVerificationEmail.apply(this, arguments);\n}\nfunction _sendVerificationEmail() {\n  _sendVerificationEmail = _asyncToGenerator(function* (user) {\n    if (user && !user.emailVerified) {\n      try {\n        yield sendEmailVerification(user);\n        console.log(\"E-mail de verificação enviado com sucesso.\");\n        Alert.alert('Verificação de E-mail', 'Um link de verificação foi enviado para seu e-mail. Por favor, verifique sua caixa de entrada para validar sua conta.');\n      } catch (error) {\n        console.error('Erro ao enviar e-mail de verificação:', error);\n        Alert.alert('Erro', 'Não foi possível enviar o e-mail de verificação agora. Tente novamente mais tarde.');\n      }\n    }\n  });\n  return _sendVerificationEmail.apply(this, arguments);\n}\nexport default function RegisterScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showConfirmPassword = _useState0[0],\n    setShowConfirmPassword = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    emailError = _useState10[0],\n    setEmailError = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    passwordError = _useState12[0],\n    setPasswordError = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    confirmPasswordError = _useState14[0],\n    setConfirmPasswordError = _useState14[1];\n  var _useState15 = useState(true),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isButtonDisabled = _useState16[0],\n    setIsButtonDisabled = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isLoading = _useState18[0],\n    setIsLoading = _useState18[1];\n  var _usePasswordValidatio = usePasswordValidation(password),\n    rules = _usePasswordValidatio.rules,\n    isPasswordValid = _usePasswordValidatio.isPasswordValid;\n  var _Google$useAuthReques = Google.useAuthRequest({\n      expoClientId: '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com',\n      webClientId: '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com',\n      androidClientId: 'SUA_ANDROID_CLIENT_ID_AQUI.apps.googleusercontent.com',\n      scopes: ['profile', 'email']\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  useEffect(function () {\n    var handleGoogleAuth = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        if ((response == null ? void 0 : response.type) === 'success' && response.authentication) {\n          setIsLoading(true);\n          try {\n            var credential = GoogleAuthProvider.credential(response.authentication.idToken);\n            var userCredential = yield signInWithCredential(auth, credential);\n            var user = userCredential.user;\n            var profile = {\n              full_name: user.displayName || 'Usuário Google',\n              email: user.email,\n              provider: 'google',\n              createdAt: user.metadata.creationTime,\n              birth_date: new Date(1990, 0, 1).toISOString(),\n              height: null,\n              weight: null,\n              restriction: '',\n              emailVerified: user.emailVerified\n            };\n            yield syncUserProfileToFirestore(user.uid, profile);\n            yield SecureStore.setItemAsync('registered_email', user.email || '');\n            yield SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n            yield SecureStore.setItemAsync('biometric_enabled', 'false');\n            Alert.alert('Sucesso', 'Conta Google criada e conectada!');\n            navigation.replace('ProfileSetup');\n          } catch (err) {\n            console.error('Erro ao registrar com Google no Firebase:', err);\n            Alert.alert('Erro', \"N\\xE3o foi poss\\xEDvel registrar com Google: \" + err.message);\n          } finally {\n            setIsLoading(false);\n          }\n        } else if ((response == null ? void 0 : response.type) === 'error') {\n          Alert.alert('Erro', 'O login com Google falhou ou foi cancelado.');\n          console.log('Resposta de erro do Google:', response.error);\n        }\n      });\n      return function handleGoogleAuth() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    handleGoogleAuth();\n  }, [response]);\n  var handleGoogleSignIn = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (!request) {\n        Alert.alert(\"Erro de Configuração\", \"O Request do Google não foi carregado. Verifique os Client IDs.\");\n        return;\n      }\n      try {\n        console.log(\"URI de Redirecionamento:\", request.redirectUri);\n        yield promptAsync();\n      } catch (error) {\n        console.error('Erro ao iniciar o prompt do Google:', error);\n        Alert.alert('Erro', 'Não foi possível iniciar o login com Google.');\n      }\n    });\n    return function handleGoogleSignIn() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var validateEmail = function validateEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n  var handleRegister = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        setEmailError('');\n        setPasswordError('');\n        setConfirmPasswordError('');\n        if (!email || !password || !confirmPassword) {\n          return Alert.alert('Campos obrigatórios', 'Preencha todos os campos.');\n        }\n        if (!validateEmail(email)) {\n          setEmailError('Digite um e-mail válido.');\n          return;\n        }\n        if (!isPasswordValid) {\n          setPasswordError('Sua senha não atende a todos os requisitos de segurança.');\n          return;\n        }\n        if (password !== confirmPassword) {\n          setConfirmPasswordError('As senhas não coincidem.');\n          return;\n        }\n        setIsLoading(true);\n        var userCredential = yield createUserWithEmailAndPassword(auth, email.trim(), password);\n        var user = userCredential.user;\n        yield sendVerificationEmail(user);\n        var profile = {\n          full_name: 'Usuário GlucoCare',\n          email: email.trim(),\n          provider: 'manual',\n          createdAt: user.metadata.creationTime,\n          birth_date: new Date(1990, 0, 1).toISOString(),\n          height: null,\n          weight: null,\n          restriction: '',\n          emailVerified: user.emailVerified\n        };\n        yield syncUserProfileToFirestore(user.uid, profile);\n        yield SecureStore.setItemAsync('registered_email', email.trim());\n        yield SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n        try {\n          var hasHardware = yield LocalAuthentication.hasHardwareAsync();\n          var supported = yield LocalAuthentication.supportedAuthenticationTypesAsync();\n          yield SecureStore.setItemAsync('biometric_enabled', hasHardware && supported.length > 0 ? 'true' : 'false');\n        } catch (_unused) {\n          yield SecureStore.setItemAsync('biometric_enabled', 'false');\n        }\n        Alert.alert('Sucesso', 'Conta criada com sucesso! Verifique seu e-mail para validar sua conta.');\n        navigation.replace('ProfileSetup');\n      } catch (err) {\n        console.error('handleRegister - erro:', err);\n        var errorMessage = 'Não foi possível registrar sua conta.';\n        if (err.code === 'auth/email-already-in-use') {\n          errorMessage = 'Este e-mail já está sendo usado.';\n        } else if (err.code === 'auth/weak-password') {\n          errorMessage = 'A senha é muito fraca. Siga os requisitos.';\n        }\n        Alert.alert('Erro', errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleRegister() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var isFormValid = validateEmail(email) && isPasswordValid && password === confirmPassword && !isLoading;\n    setIsButtonDisabled(!isFormValid);\n  }, [email, password, confirmPassword, isPasswordValid, isLoading]);\n  return _jsx(SafeAreaView, {\n    style: styles.safe,\n    children: _jsx(KeyboardAvoidingView, {\n      style: {\n        flex: 1\n      },\n      behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: styles.container,\n        keyboardShouldPersistTaps: \"handled\",\n        children: [_jsx(AntDesign, {\n          name: \"adduser\",\n          size: 64,\n          color: \"#2563eb\",\n          style: {\n            alignSelf: 'center',\n            marginBottom: 20\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"Criar Conta\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Preencha os dados ou use sua conta Google\"\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.googleButton, (!request || isLoading) && {\n            opacity: 0.5\n          }],\n          disabled: !request || isLoading,\n          onPress: handleGoogleSignIn,\n          children: [_jsx(AntDesign, {\n            name: \"google\",\n            size: 20,\n            color: \"#DB4437\",\n            style: {\n              marginRight: 8\n            }\n          }), _jsx(Text, {\n            style: styles.googleText,\n            children: \"Cadastrar com Google\"\n          })]\n        }), _jsx(Text, {\n          style: styles.orText,\n          children: \"ou\"\n        }), _jsx(TextInput, {\n          style: [styles.input, emailError ? styles.inputError : null],\n          placeholder: \"E-mail\",\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\",\n          value: email,\n          onChangeText: setEmail,\n          onBlur: function onBlur() {\n            return setEmailError(validateEmail(email) ? '' : 'Digite um e-mail válido.');\n          }\n        }), emailError ? _jsx(Text, {\n          style: styles.errorText,\n          children: emailError\n        }) : null, _jsx(Text, {\n          style: [styles.title, {\n            fontSize: 16,\n            marginBottom: 8,\n            textAlign: 'left'\n          }],\n          children: \"Crie sua senha\"\n        }), _jsxs(View, {\n          style: styles.passwordContainer,\n          children: [_jsx(TextInput, {\n            style: [styles.input, {\n              marginBottom: 0,\n              paddingRight: 50\n            }],\n            placeholder: \"Senha\",\n            secureTextEntry: !showPassword,\n            value: password,\n            onChangeText: setPassword\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowPassword(!showPassword);\n            },\n            style: styles.eyeIcon,\n            children: _jsx(Feather, {\n              name: showPassword ? 'eye' : 'eye-off',\n              size: 24,\n              color: \"#6b7280\"\n            })\n          })]\n        }), _jsx(PasswordRequirements, {\n          rules: rules\n        }), passwordError && !isPasswordValid ? _jsx(Text, {\n          style: styles.errorText,\n          children: passwordError\n        }) : null, _jsx(Text, {\n          style: [styles.title, {\n            fontSize: 16,\n            marginBottom: 8,\n            marginTop: 16,\n            textAlign: 'left'\n          }],\n          children: \"Confirme sua senha\"\n        }), _jsxs(View, {\n          style: styles.passwordContainer,\n          children: [_jsx(TextInput, {\n            style: [styles.input, confirmPasswordError ? styles.inputError : null, {\n              paddingRight: 50\n            }],\n            placeholder: \"Confirmar Senha\",\n            secureTextEntry: !showConfirmPassword,\n            value: confirmPassword,\n            onChangeText: setConfirmPassword,\n            onBlur: function onBlur() {\n              return setConfirmPasswordError(password === confirmPassword ? '' : 'As senhas não coincidem.');\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowConfirmPassword(!showConfirmPassword);\n            },\n            style: styles.eyeIcon,\n            children: _jsx(Feather, {\n              name: showConfirmPassword ? 'eye' : 'eye-off',\n              size: 24,\n              color: \"#6b7280\"\n            })\n          })]\n        }), confirmPasswordError ? _jsx(Text, {\n          style: styles.errorText,\n          children: confirmPasswordError\n        }) : null, _jsx(TouchableOpacity, {\n          style: [styles.buttonPrimary, isButtonDisabled && {\n            opacity: 0.5\n          }],\n          onPress: handleRegister,\n          disabled: isButtonDisabled || isLoading,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: isLoading ? 'Aguarde...' : 'Registrar'\n          })\n        }), _jsxs(Text, {\n          style: styles.loginText,\n          children: [\"J\\xE1 tem uma conta?\", ' ', _jsx(Text, {\n            style: styles.loginLink,\n            onPress: function onPress() {\n              return navigation.navigate('Login');\n            },\n            children: \"Entrar\"\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: '#f0f6ff'\n  },\n  container: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '700',\n    textAlign: 'center',\n    color: '#111827'\n  },\n  subtitle: {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#6b7280',\n    marginBottom: 20\n  },\n  googleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n    backgroundColor: '#fff',\n    paddingVertical: 14,\n    borderRadius: 10,\n    justifyContent: 'center',\n    marginBottom: 16\n  },\n  googleText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#111'\n  },\n  orText: {\n    textAlign: 'center',\n    color: '#6b7280',\n    marginVertical: 12\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n    borderRadius: 10,\n    padding: 14,\n    backgroundColor: '#fff',\n    fontSize: 15,\n    marginBottom: 8,\n    color: '#111827',\n    width: '100%'\n  },\n  inputError: {\n    borderColor: 'red'\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 12,\n    marginBottom: 8,\n    paddingHorizontal: 4\n  },\n  buttonPrimary: {\n    padding: 14,\n    borderRadius: 10,\n    backgroundColor: '#2563eb',\n    alignItems: 'center',\n    marginTop: 16\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n    fontSize: 16\n  },\n  loginText: {\n    textAlign: 'center',\n    marginTop: 16,\n    fontSize: 14,\n    color: '#4b5563'\n  },\n  loginLink: {\n    color: '#2563eb',\n    fontWeight: '600'\n  },\n  passwordContainer: {\n    position: 'relative',\n    marginBottom: 8\n  },\n  eyeIcon: {\n    position: 'absolute',\n    right: 10,\n    top: 15,\n    padding: 5,\n    zIndex: 1\n  }\n});\nvar validationStyles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    marginBottom: 16,\n    paddingHorizontal: 5,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#e5e7eb'\n  },\n  title: {\n    fontSize: 13,\n    fontWeight: '700',\n    color: '#374151',\n    marginBottom: 8\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 3\n  },\n  itemText: {\n    fontSize: 13,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useMemo","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ScrollView","KeyboardAvoidingView","Platform","View","AntDesign","Feather","SafeAreaView","SecureStore","LocalAuthentication","WebBrowser","Google","auth","db","createUserWithEmailAndPassword","GoogleAuthProvider","signInWithCredential","sendEmailVerification","doc","setDoc","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","usePasswordValidation","password","rules","length","uppercase","test","lowercase","number","specialChar","isPasswordValid","Object","values","every","Boolean","RequirementItem","_ref","met","label","color","icon","style","validationStyles","itemContainer","children","name","size","marginRight","itemText","PasswordRequirements","_ref2","container","title","syncUserProfileToFirestore","_x","_x2","_syncUserProfileToFirestore","apply","arguments","_asyncToGenerator","uid","profile","userRef","_objectSpread","updatedAt","Date","toISOString","merge","console","log","error","Error","sendVerificationEmail","_x3","_sendVerificationEmail","user","emailVerified","alert","RegisterScreen","_ref3","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState0","showConfirmPassword","setShowConfirmPassword","_useState1","_useState10","emailError","setEmailError","_useState11","_useState12","passwordError","setPasswordError","_useState13","_useState14","confirmPasswordError","setConfirmPasswordError","_useState15","_useState16","isButtonDisabled","setIsButtonDisabled","_useState17","_useState18","isLoading","setIsLoading","_usePasswordValidatio","_Google$useAuthReques","useAuthRequest","expoClientId","webClientId","androidClientId","scopes","_Google$useAuthReques2","request","response","promptAsync","handleGoogleAuth","_ref4","type","authentication","credential","idToken","userCredential","full_name","displayName","provider","createdAt","metadata","creationTime","birth_date","height","weight","restriction","setItemAsync","JSON","stringify","replace","err","message","handleGoogleSignIn","_ref5","redirectUri","validateEmail","handleRegister","_ref6","trim","hasHardware","hasHardwareAsync","supported","supportedAuthenticationTypesAsync","_unused","errorMessage","code","isFormValid","styles","safe","flex","behavior","OS","undefined","contentContainerStyle","keyboardShouldPersistTaps","alignSelf","marginBottom","subtitle","googleButton","opacity","disabled","onPress","googleText","orText","input","inputError","placeholder","autoCapitalize","keyboardType","value","onChangeText","onBlur","errorText","fontSize","textAlign","passwordContainer","paddingRight","secureTextEntry","eyeIcon","marginTop","buttonPrimary","buttonText","loginText","loginLink","navigate","create","backgroundColor","flexGrow","justifyContent","padding","fontWeight","flexDirection","alignItems","borderWidth","borderColor","paddingVertical","borderRadius","marginVertical","width","paddingHorizontal","position","right","top","zIndex"],"sources":["C:/Users/Usuário/Desktop/glucocare/src/screens/RegisterScreen.tsx"],"sourcesContent":["// src/screens/RegisterScreen.tsx\nimport 'react-native-get-random-values';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport {\n    Text,\n    TextInput,\n    TouchableOpacity,\n    StyleSheet,\n    Alert,\n    ScrollView,\n    KeyboardAvoidingView,\n    Platform,\n    View,\n} from 'react-native';\nimport { AntDesign, Feather } from '@expo/vector-icons';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport * as SecureStore from 'expo-secure-store';\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\n\n// 🚨 IMPORTAÇÕES FIREBASE ATUALIZADAS\nimport { auth, db } from '../config/firebase'; \nimport {\n    createUserWithEmailAndPassword,\n    GoogleAuthProvider,\n    signInWithCredential,\n    // NOVO: Função para enviar o e-mail de verificação\n    sendEmailVerification,\n    User,\n} from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore'; \n\nWebBrowser.maybeCompleteAuthSession();\n\n// --- Definição da Tipagem \ninterface PasswordRules {\n    length: boolean;\n    uppercase: boolean;\n    lowercase: boolean;\n    number: boolean;\n    specialChar: boolean;\n}\n\ninterface NavigationProp {\n    navigate: (screen: string) => void;\n    replace: (screen: string) => void;\n}\n\n// ------------------------------------\n// 1. HOOK CUSTOMIZADO PARA VALIDAÇÃO DA SENHA\n// ------------------------------------\nconst usePasswordValidation = (password: string) => {\n    const rules: PasswordRules = useMemo(() => ({\n        // No mínimo 8 dígitos\n        length: password.length >= 8,\n        // Pelo menos 1 letra maiúscula (A–Z)\n        uppercase: /[A-Z]/.test(password),\n        // Pelo menos 1 letra minúscula (a–z)\n        lowercase: /[a-z]/.test(password),\n        // Pelo menos 1 número (0–9)\n        number: /\\d/.test(password),\n        // Pelo menos 1 caractere especial (ex.: ! @ # $ % ^ & *)\n        specialChar: /[^A-Za-z0-9\\s]/.test(password),\n    }), [password]);\n\n    // O validador principal que verifica se TODAS as regras são true\n    const isPasswordValid = Object.values(rules).every(Boolean);\n\n    return { rules, isPasswordValid };\n};\n\n// ------------------------------------\n// 2. COMPONENTE PARA EXIBIR AS REGRAS\n// ------------------------------------\ninterface RequirementItemProps {\n    met: boolean;\n    label: string;\n}\n\nconst RequirementItem: React.FC<RequirementItemProps> = ({ met, label }) => {\n    const color = met ? '#10b981' : '#ef4444';\n    const icon = met ? 'check' : 'x';\n\n    return (\n        <View style={validationStyles.itemContainer}>\n            <Feather name={icon} size={14} color={color} style={{ marginRight: 6 }} />\n            <Text style={[validationStyles.itemText, { color }]}>{label}</Text>\n        </View>\n    );\n};\n\ninterface PasswordRequirementsProps {\n    rules: PasswordRules;\n}\n\nconst PasswordRequirements: React.FC<PasswordRequirementsProps> = ({ rules }) => (\n    <View style={validationStyles.container}>\n        <Text style={validationStyles.title}>\n            Certifique-se de que sua nova senha contém\n        </Text>\n        <RequirementItem met={rules.length} label=\"No mínimo 8 dígitos\" />\n        <RequirementItem met={rules.uppercase} label=\"Pelo menos 1 letra maiúscula (A–Z)\" />\n        <RequirementItem met={rules.lowercase} label=\"Pelo menos 1 letra minúscula (a–z)\" />\n        <RequirementItem met={rules.number} label=\"Pelo menos 1 número (0–9)\" />\n        <RequirementItem met={rules.specialChar} label=\"Pelo menos 1 caractere especial (ex.: !@#$%^&*)\" />\n    </View>\n);\n\n// ------------------------------------\n// FUNÇÃO DE SINCRONIZAÇÃO DE PERFIL NO FIRESTORE\n// ------------------------------------\n\n/**\n * Salva ou atualiza os dados básicos do usuário no Cloud Firestore.\n * @param uid O User ID do Firebase (o ID único gerado).\n * @param profile O objeto de perfil local.\n */\nasync function syncUserProfileToFirestore(uid: string, profile: any) {\n    try {\n        // Define o documento na coleção 'users' usando o UID do Firebase como ID do documento\n        const userRef = doc(db, 'users', uid);\n        await setDoc(userRef, {\n            ...profile,\n            uid: uid, // Adiciona o UID real do Firebase\n            updatedAt: new Date().toISOString(),\n        }, { merge: true }); // Usamos merge: true para não sobrescrever dados existentes \n        console.log(`Perfil do usuário ${uid} sincronizado com sucesso no Firestore.`);\n    } catch (error) {\n        console.error(\"Erro ao sincronizar perfil do usuário no Firestore:\", error);\n        throw new Error('Falha ao salvar o perfil na nuvem.');\n    }\n}\n\n// ------------------------------------\n// NOVO: FUNÇÃO PARA ENVIAR VERIFICAÇÃO DE EMAIL\n// ------------------------------------\nasync function sendVerificationEmail(user: User) {\n    if (user && !user.emailVerified) {\n        try {\n            await sendEmailVerification(user);\n            console.log(\"E-mail de verificação enviado com sucesso.\");\n            Alert.alert(\n                'Verificação de E-mail',\n                'Um link de verificação foi enviado para seu e-mail. Por favor, verifique sua caixa de entrada para validar sua conta.'\n            );\n        } catch (error) {\n            console.error('Erro ao enviar e-mail de verificação:', error);\n            Alert.alert('Erro', 'Não foi possível enviar o e-mail de verificação agora. Tente novamente mais tarde.');\n        }\n    }\n}\n\n\n// ------------------------------------\n// 3. RegisterScreen COMPLETO\n// ------------------------------------\n\nexport default function RegisterScreen({ navigation }: { navigation: NavigationProp }) {\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\n    const [emailError, setEmailError] = useState<string>('');\n    const [passwordError, setPasswordError] = useState<string>('');\n    const [confirmPasswordError, setConfirmPasswordError] = useState<string>('');\n    const [isButtonDisabled, setIsButtonDisabled] = useState<boolean>(true);\n    const [isLoading, setIsLoading] = useState<boolean>(false); \n\n    // Usando o hook para as regras de validação\n    const { rules, isPasswordValid } = usePasswordValidation(password);\n\n    // --- Google OAuth Config (Mantenha o androidClientId REAL e configure o redirect_uri no Google Cloud)\n    const [request, response, promptAsync] = Google.useAuthRequest({\n        expoClientId:\n            '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com', \n        webClientId:\n            '360317541807-i8qgcvkit3vsv8s7did5rgjod17eld77.apps.googleusercontent.com', \n        androidClientId:\n            'SUA_ANDROID_CLIENT_ID_AQUI.apps.googleusercontent.com', // ⚠️ ATENÇÃO: SUBSTITUA PELO SEU ID REAL\n        scopes: ['profile', 'email'],\n    });\n\n    // --- Handle Google Response\n    useEffect(() => {\n        const handleGoogleAuth = async () => {\n            if (response?.type === 'success' && response.authentication) {\n                setIsLoading(true);\n                try {\n                    // 1. Cria a credencial do Google usando o token de acesso\n                    const credential = GoogleAuthProvider.credential(\n                        response.authentication.idToken\n                    );\n\n                    // 2. Faz login/criação de conta no Firebase com a credencial\n                    const userCredential = await signInWithCredential(auth, credential);\n                    const user = userCredential.user;\n\n                    // 3. Cria o objeto de perfil inicial\n                    const profile = {\n                        full_name: user.displayName || 'Usuário Google',\n                        email: user.email,\n                        provider: 'google',\n                        createdAt: user.metadata.creationTime, \n                        birth_date: new Date(1990, 0, 1).toISOString(),\n                        height: null,\n                        weight: null,\n                        restriction: '',\n                        // NOVO: Adiciona o status de emailVerified ao perfil local (true para Google)\n                        emailVerified: user.emailVerified, \n                    };\n\n                    // 4. Sincroniza o perfil com o Firestore\n                    await syncUserProfileToFirestore(user.uid, profile);\n\n                    // 5. Armazenamento local (SecureStore)\n                    await SecureStore.setItemAsync('registered_email', user.email || '');\n                    await SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n                    await SecureStore.setItemAsync('biometric_enabled', 'false'); \n\n                    Alert.alert('Sucesso', 'Conta Google criada e conectada!');\n                    navigation.replace('ProfileSetup');\n                } catch (err: any) {\n                    console.error('Erro ao registrar com Google no Firebase:', err);\n                    Alert.alert('Erro', `Não foi possível registrar com Google: ${err.message}`);\n                } finally {\n                    setIsLoading(false);\n                }\n            } else if (response?.type === 'error') {\n                Alert.alert('Erro', 'O login com Google falhou ou foi cancelado.');\n                console.log('Resposta de erro do Google:', response.error);\n            }\n        };\n\n        handleGoogleAuth();\n    }, [response]);\n\n    // --- Função para chamar o prompt do Google\n    const handleGoogleSignIn = async () => {\n        if (!request) {\n            Alert.alert(\"Erro de Configuração\", \"O Request do Google não foi carregado. Verifique os Client IDs.\");\n            return;\n        }\n        try {\n            console.log(\"URI de Redirecionamento:\", request.redirectUri); \n            await promptAsync();\n        } catch (error) {\n            console.error('Erro ao iniciar o prompt do Google:', error);\n            Alert.alert('Erro', 'Não foi possível iniciar o login com Google.');\n        }\n    };\n\n    // --- Validadores\n    const validateEmail = (email: string) => /\\S+@\\S+\\.\\S+/.test(email);\n\n    // --- Registro Manual (USA FIREBASE AUTH E FIRESTORE)\n    const handleRegister = async () => {\n        try {\n            // Limpa erros anteriores\n            setEmailError('');\n            setPasswordError('');\n            setConfirmPasswordError('');\n\n            if (!email || !password || !confirmPassword) {\n                return Alert.alert('Campos obrigatórios', 'Preencha todos os campos.');\n            }\n            if (!validateEmail(email)) {\n                setEmailError('Digite um e-mail válido.');\n                return;\n            }\n            // Validação de complexidade\n            if (!isPasswordValid) {\n                setPasswordError('Sua senha não atende a todos os requisitos de segurança.');\n                return;\n            }\n            if (password !== confirmPassword) {\n                setConfirmPasswordError('As senhas não coincidem.');\n                return;\n            }\n            \n            setIsLoading(true);\n\n            // 1. CRIAÇÃO DE CONTA NO FIREBASE AUTH\n            const userCredential = await createUserWithEmailAndPassword(\n                auth,\n                email.trim(),\n                password\n            );\n            const user = userCredential.user;\n\n            // NOVO: 2. DISPARA O E-MAIL DE VERIFICAÇÃO\n            await sendVerificationEmail(user);\n\n            // 3. Criação do Perfil Básico\n            const profile = {\n                full_name: 'Usuário GlucoCare',\n                email: email.trim(),\n                provider: 'manual',\n                createdAt: user.metadata.creationTime,\n                birth_date: new Date(1990, 0, 1).toISOString(),\n                height: null,\n                weight: null,\n                restriction: '',\n                // NOVO: Adiciona o status de emailVerified ao perfil local (false inicialmente)\n                emailVerified: user.emailVerified, \n            };\n\n            // 4. Sincroniza o perfil com o Firestore\n            await syncUserProfileToFirestore(user.uid, profile);\n\n            // 5. Armazenamento Seguro (Apenas dados de login e perfil)\n            await SecureStore.setItemAsync('registered_email', email.trim());\n            await SecureStore.setItemAsync('user_profile', JSON.stringify(profile));\n\n            // 6. Checagem e Habilitação (ou Desabilitação) da Biometria \n            try {\n                const hasHardware = await LocalAuthentication.hasHardwareAsync();\n                const supported =\n                    await LocalAuthentication.supportedAuthenticationTypesAsync();\n                await SecureStore.setItemAsync(\n                    'biometric_enabled',\n                    hasHardware && supported.length > 0 ? 'true' : 'false'\n                );\n            } catch {\n                await SecureStore.setItemAsync('biometric_enabled', 'false');\n            }\n\n            Alert.alert(\n                'Sucesso', \n                'Conta criada com sucesso! Verifique seu e-mail para validar sua conta.'\n            );\n            // O usuário navega para a configuração de perfil, mesmo sem confirmar o e-mail, conforme solicitado.\n            navigation.replace('ProfileSetup'); \n        } catch (err: any) {\n            console.error('handleRegister - erro:', err);\n            // Melhora a exibição de erros comuns do Firebase\n            let errorMessage = 'Não foi possível registrar sua conta.';\n            if (err.code === 'auth/email-already-in-use') {\n                errorMessage = 'Este e-mail já está sendo usado.';\n            } else if (err.code === 'auth/weak-password') {\n                errorMessage = 'A senha é muito fraca. Siga os requisitos.';\n            }\n            Alert.alert('Erro', errorMessage);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // --- Desabilitar botão de registro\n    useEffect(() => {\n        const isFormValid =\n            validateEmail(email) &&\n            isPasswordValid &&\n            password === confirmPassword &&\n            !isLoading; // Desabilita durante o carregamento\n        setIsButtonDisabled(!isFormValid);\n    }, [email, password, confirmPassword, isPasswordValid, isLoading]);\n\n\n    return (\n        <SafeAreaView style={styles.safe}>\n            <KeyboardAvoidingView\n                style={{ flex: 1 }}\n                behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n            >\n                <ScrollView\n                    contentContainerStyle={styles.container}\n                    keyboardShouldPersistTaps=\"handled\"\n                >\n                    <AntDesign\n                        name=\"adduser\"\n                        size={64}\n                        color=\"#2563eb\"\n                        style={{ alignSelf: 'center', marginBottom: 20 }}\n                    />\n\n                    <Text style={styles.title}>Criar Conta</Text>\n                    <Text style={styles.subtitle}>\n                        Preencha os dados ou use sua conta Google\n                    </Text>\n\n                    {/* Botão Google */}\n                    <TouchableOpacity\n                        style={[styles.googleButton, (!request || isLoading) && { opacity: 0.5 }]}\n                        disabled={!request || isLoading}\n                        onPress={handleGoogleSignIn}\n                    >\n                        <AntDesign\n                            name=\"google\"\n                            size={20}\n                            color=\"#DB4437\"\n                            style={{ marginRight: 8 }}\n                        />\n                        <Text style={styles.googleText}>Cadastrar com Google</Text>\n                    </TouchableOpacity>\n\n                    <Text style={styles.orText}>ou</Text>\n                    \n                    {/* Inputs */}\n                    <TextInput\n                        style={[styles.input, emailError ? styles.inputError : null]}\n                        placeholder=\"E-mail\"\n                        autoCapitalize=\"none\"\n                        keyboardType=\"email-address\"\n                        value={email}\n                        onChangeText={setEmail}\n                        onBlur={() => setEmailError(validateEmail(email) ? '' : 'Digite um e-mail válido.')}\n                    />\n                    {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n\n                    {/* --- CAMPO SENHA --- */}\n                    <Text style={[styles.title, { fontSize: 16, marginBottom: 8, textAlign: 'left' }]}>\n                        Crie sua senha\n                    </Text>\n                    <View style={styles.passwordContainer}>\n                        <TextInput\n                            style={[styles.input, { marginBottom: 0, paddingRight: 50 }]}\n                            placeholder=\"Senha\"\n                            secureTextEntry={!showPassword}\n                            value={password}\n                            onChangeText={setPassword}\n                        />\n                        <TouchableOpacity\n                            onPress={() => setShowPassword(!showPassword)}\n                            style={styles.eyeIcon}\n                        >\n                            <Feather\n                                name={showPassword ? 'eye' : 'eye-off'}\n                                size={24}\n                                color=\"#6b7280\"\n                            />\n                        </TouchableOpacity>\n                    </View>\n                    \n                    {/* --- COMPONENTE DE REQUISITOS DE SENHA --- */}\n                    <PasswordRequirements rules={rules} />\n                    {passwordError && !isPasswordValid ? (\n                        <Text style={styles.errorText}>{passwordError}</Text>\n                    ) : null}\n\n                    {/* --- CAMPO CONFIRMAR SENHA --- */}\n                    <Text style={[styles.title, { fontSize: 16, marginBottom: 8, marginTop: 16, textAlign: 'left' }]}>\n                        Confirme sua senha\n                    </Text>\n                    <View style={styles.passwordContainer}>\n                        <TextInput\n                            style={[styles.input, confirmPasswordError ? styles.inputError : null, { paddingRight: 50 }]}\n                            placeholder=\"Confirmar Senha\"\n                            secureTextEntry={!showConfirmPassword}\n                            value={confirmPassword}\n                            onChangeText={setConfirmPassword}\n                            onBlur={() => setConfirmPasswordError(password === confirmPassword ? '' : 'As senhas não coincidem.')}\n                        />\n                        <TouchableOpacity\n                            onPress={() => setShowConfirmPassword(!showConfirmPassword)}\n                            style={styles.eyeIcon}\n                        >\n                            <Feather\n                                name={showConfirmPassword ? 'eye' : 'eye-off'}\n                                size={24}\n                                color=\"#6b7280\"\n                            />\n                        </TouchableOpacity>\n                    </View>\n                    {confirmPasswordError ? (\n                        <Text style={styles.errorText}>{confirmPasswordError}</Text>\n                    ) : null}\n\n                    <TouchableOpacity\n                        style={[styles.buttonPrimary, isButtonDisabled && { opacity: 0.5 }]}\n                        onPress={handleRegister}\n                        disabled={isButtonDisabled || isLoading}\n                    >\n                        <Text style={styles.buttonText}>\n                            {isLoading ? 'Aguarde...' : 'Registrar'}\n                        </Text>\n                    </TouchableOpacity>\n\n                    <Text style={styles.loginText}>\n                        Já tem uma conta?{' '}\n                        <Text\n                            style={styles.loginLink}\n                            onPress={() => navigation.navigate('Login')}\n                        >\n                            Entrar\n                        </Text>\n                    </Text>\n                </ScrollView>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    safe: { flex: 1, backgroundColor: '#f0f6ff' },\n    container: { flexGrow: 1, justifyContent: 'center', padding: 24 },\n    title: {\n        fontSize: 24,\n        fontWeight: '700',\n        textAlign: 'center',\n        color: '#111827',\n    },\n    subtitle: {\n        fontSize: 14,\n        textAlign: 'center',\n        color: '#6b7280',\n        marginBottom: 20,\n    },\n    googleButton: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        borderWidth: 1,\n        borderColor: '#d1d5db',\n        backgroundColor: '#fff',\n        paddingVertical: 14,\n        borderRadius: 10,\n        justifyContent: 'center',\n        marginBottom: 16,\n    },\n    googleText: { fontSize: 16, fontWeight: '600', color: '#111' },\n    orText: { textAlign: 'center', color: '#6b7280', marginVertical: 12 },\n    input: {\n        borderWidth: 1,\n        borderColor: '#d1d5db',\n        borderRadius: 10,\n        padding: 14,\n        backgroundColor: '#fff',\n        fontSize: 15,\n        marginBottom: 8,\n        color: '#111827',\n        width: '100%',\n    },\n    inputError: {\n        borderColor: 'red',\n    },\n    errorText: {\n        color: 'red',\n        fontSize: 12,\n        marginBottom: 8,\n        paddingHorizontal: 4,\n    },\n    buttonPrimary: {\n        padding: 14,\n        borderRadius: 10,\n        backgroundColor: '#2563eb',\n        alignItems: 'center',\n        marginTop: 16,\n    },\n    buttonText: { color: '#fff', fontWeight: '600', fontSize: 16 },\n    loginText: {\n        textAlign: 'center',\n        marginTop: 16,\n        fontSize: 14,\n        color: '#4b5563',\n    },\n    loginLink: { color: '#2563eb', fontWeight: '600' },\n    passwordContainer: {\n        position: 'relative',\n        marginBottom: 8,\n    },\n    eyeIcon: {\n        position: 'absolute',\n        right: 10,\n        top: 15,\n        padding: 5,\n        zIndex: 1,\n    },\n});\n\nconst validationStyles = StyleSheet.create({\n    container: {\n        marginTop: 10,\n        marginBottom: 16,\n        paddingHorizontal: 5,\n        backgroundColor: '#ffffff',\n        borderRadius: 8,\n        padding: 10,\n        borderWidth: 1,\n        borderColor: '#e5e7eb',\n    },\n    title: {\n        fontSize: 13,\n        fontWeight: '700',\n        color: '#374151',\n        marginBottom: 8,\n    },\n    itemContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 3,\n    },\n    itemText: {\n        fontSize: 13,\n        fontWeight: '500',\n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}