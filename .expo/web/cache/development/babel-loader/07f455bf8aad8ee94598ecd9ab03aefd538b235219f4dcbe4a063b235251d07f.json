{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SecureStore = {\n  getItemAsync: function () {\n    var _getItemAsync = _asyncToGenerator(function* (key) {\n      return Promise.resolve(window.localStorage.getItem(key));\n    });\n    function getItemAsync(_x) {\n      return _getItemAsync.apply(this, arguments);\n    }\n    return getItemAsync;\n  }(),\n  setItemAsync: function () {\n    var _setItemAsync = _asyncToGenerator(function* (key, value) {\n      window.localStorage.setItem(key, value);\n      return Promise.resolve();\n    });\n    function setItemAsync(_x2, _x3) {\n      return _setItemAsync.apply(this, arguments);\n    }\n    return setItemAsync;\n  }(),\n  deleteItemAsync: function () {\n    var _deleteItemAsync = _asyncToGenerator(function* (key) {\n      window.localStorage.removeItem(key);\n      return Promise.resolve();\n    });\n    function deleteItemAsync(_x4) {\n      return _deleteItemAsync.apply(this, arguments);\n    }\n    return deleteItemAsync;\n  }()\n};\nvar getUser = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var storedProfile = yield SecureStore.getItemAsync('user_profile');\n    if (storedProfile) {\n      return JSON.parse(storedProfile);\n    }\n    return null;\n  });\n  return function getUser() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar clearUser = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    return Promise.resolve();\n  });\n  return function clearUser() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar PROFILE_KEY = 'user_profile';\nvar GOOGLE_TOKEN_KEY = 'google_token';\nvar REGISTERED_EMAIL_KEY = 'registered_email';\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref3) {\n  var children = _ref3.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var checkAuthStatus = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var storedProfile = yield SecureStore.getItemAsync(PROFILE_KEY);\n        if (storedProfile) {\n          var profile = JSON.parse(storedProfile);\n          setIsAuthenticated(true);\n          setUser(profile);\n        } else {\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      } catch (error) {\n        console.error(\"Erro ao verificar status de autenticação:\", error);\n        setIsAuthenticated(false);\n        setUser(null);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref5 = _asyncToGenerator(function* (profile) {\n      try {\n        yield SecureStore.setItemAsync(PROFILE_KEY, JSON.stringify(profile));\n        setIsAuthenticated(true);\n        setUser(profile);\n      } catch (error) {\n        console.error(\"Erro ao executar login:\", error);\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    });\n    return function login(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        yield SecureStore.deleteItemAsync(PROFILE_KEY);\n        yield SecureStore.deleteItemAsync(GOOGLE_TOKEN_KEY);\n        yield SecureStore.deleteItemAsync(REGISTERED_EMAIL_KEY);\n        yield SecureStore.deleteItemAsync('registered_password');\n        yield clearUser();\n        setIsAuthenticated(false);\n        setUser(null);\n      } catch (error) {\n        console.error(\"Erro durante o logout:\", error);\n      }\n    });\n    return function logout() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkAuthStatus();\n  }, []);\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      user: user,\n      isLoading: isLoading,\n      login: login,\n      logout: logout\n    },\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","SecureStore","getItemAsync","_getItemAsync","_asyncToGenerator","key","Promise","resolve","window","localStorage","getItem","_x","apply","arguments","setItemAsync","_setItemAsync","value","setItem","_x2","_x3","deleteItemAsync","_deleteItemAsync","removeItem","_x4","getUser","_ref","storedProfile","JSON","parse","clearUser","_ref2","PROFILE_KEY","GOOGLE_TOKEN_KEY","REGISTERED_EMAIL_KEY","AuthContext","undefined","AuthProvider","_ref3","children","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","user","setUser","_useState5","_useState6","isLoading","setIsLoading","checkAuthStatus","_ref4","profile","error","console","login","_ref5","stringify","_x5","logout","_ref6","Provider","useAuth","context","Error"],"sources":["C:/Users/Usuário/Desktop/glucocare/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// --- MOCK DE DEPENDÊNCIAS NATIVAS ---\n// Em um ambiente web, 'expo-secure-store' e 'expo-sqlite' não estão disponíveis.\n// Criamos simulações (mocks) usando o localStorage do navegador para que o código possa ser executado.\n\n/**\n * Mock para 'expo-secure-store'.\n * Simula o armazenamento seguro usando o localStorage do navegador.\n */\nconst SecureStore = {\n  async getItemAsync(key: string): Promise<string | null> {\n    return Promise.resolve(window.localStorage.getItem(key));\n  },\n  async setItemAsync(key: string, value: string): Promise<void> {\n    window.localStorage.setItem(key, value);\n    return Promise.resolve();\n  },\n  async deleteItemAsync(key: string): Promise<void> {\n    window.localStorage.removeItem(key);\n    return Promise.resolve();\n  },\n};\n\n/**\n * Mock para as funções do '../services/dbService'.\n * Simula as funções de banco de dados que seriam usadas no app nativo.\n */\n// A interface UserProfile é definida aqui, pois o arquivo original não está acessível.\nexport interface UserProfile {\n    id: string;\n    name: string;\n    email: string;\n    googleId?: string;\n    onboardingCompleted?: boolean;\n    biometricEnabled?: boolean;\n    weight?: number | null;\n    height?: number | null;\n    birthDate?: string;\n    condition?: string;\n    restriction?: string;\n    syncedAt?: string | null;\n}\n\nconst getUser = async (): Promise<UserProfile | null> => {\n    // Para este mock, assumimos que o perfil no SecureStore é a fonte da verdade.\n    const storedProfile = await SecureStore.getItemAsync('user_profile');\n    if (storedProfile) {\n        return JSON.parse(storedProfile) as UserProfile;\n    }\n    return null;\n};\n\nconst clearUser = async (): Promise<void> => {\n    // A lógica de logout já limpa o SecureStore, então este mock não precisa fazer nada extra.\n    return Promise.resolve();\n};\n\n// --- FIM DOS MOCKS ---\n\n\n// --- Constantes de Armazenamento ---\nconst PROFILE_KEY = 'user_profile';\nconst GOOGLE_TOKEN_KEY = 'google_token';\nconst REGISTERED_EMAIL_KEY = 'registered_email';\n// A chave 'registered_password' é mantida para limpeza, mas seu uso não é recomendado.\n\n// 1. Definição da Tipagem do Contexto\ninterface AuthContextType {\n    isAuthenticated: boolean;\n    user: UserProfile | null;\n    isLoading: boolean;\n    login: (profile: UserProfile) => Promise<void>;\n    logout: () => Promise<void>;\n}\n\n// 2. Criação do Contexto\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// 3. O Provedor (Componente que irá encapsular o App)\ninterface AuthProviderProps {\n    children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [user, setUser] = useState<UserProfile | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Função para verificar o estado de login no armazenamento seguro\n    const checkAuthStatus = async () => {\n        try {\n            const storedProfile = await SecureStore.getItemAsync(PROFILE_KEY);\n            \n            if (storedProfile) {\n                const profile: UserProfile = JSON.parse(storedProfile);\n                setIsAuthenticated(true);\n                setUser(profile);\n            } else {\n                setIsAuthenticated(false);\n                setUser(null);\n            }\n        } catch (error) {\n            console.error(\"Erro ao verificar status de autenticação:\", error);\n            setIsAuthenticated(false);\n            setUser(null);\n        } finally {\n            setIsLoading(false); \n        }\n    };\n\n    /**\n     * Define o usuário como logado e armazena o perfil no SecureStore.\n     */\n    const login = async (profile: UserProfile) => {\n        try {\n            await SecureStore.setItemAsync(PROFILE_KEY, JSON.stringify(profile));\n            setIsAuthenticated(true);\n            setUser(profile);\n        } catch (error) {\n            console.error(\"Erro ao executar login:\", error);\n            setIsAuthenticated(false);\n            setUser(null);\n        }\n    };\n\n    /**\n     * Executa o logout, limpa SecureStore e limpa dados locais (SQLite).\n     */\n    const logout = async () => {\n        try {\n            // 1. Limpeza do SecureStore (usando nosso mock)\n            await SecureStore.deleteItemAsync(PROFILE_KEY);\n            await SecureStore.deleteItemAsync(GOOGLE_TOKEN_KEY);\n            await SecureStore.deleteItemAsync(REGISTERED_EMAIL_KEY); \n            await SecureStore.deleteItemAsync('registered_password'); \n            \n            // 2. Limpeza do SQLite (usando nosso mock)\n            await clearUser(); \n\n            // 3. Limpeza do estado\n            setIsAuthenticated(false);\n            setUser(null);\n        } catch (error) {\n            console.error(\"Erro durante o logout:\", error);\n        }\n    };\n\n    useEffect(() => {\n        checkAuthStatus();\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, user, isLoading, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n// 4. O Hook Customizado\n/**\n * Hook customizado para consumir o contexto de autenticação.\n */\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n    }\n    return context;\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAU9E,IAAMC,WAAW,GAAG;EACZC,YAAY;IAAA,IAAAC,aAAA,GAAAC,iBAAA,YAACC,GAAW,EAA0B;MACtD,OAAOC,OAAO,CAACC,OAAO,CAACC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC,CAAC;IAC1D,CAAC;IAAA,SAFKH,YAAYA,CAAAS,EAAA;MAAA,OAAAR,aAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAZX,YAAY;EAAA;EAGZY,YAAY;IAAA,IAAAC,aAAA,GAAAX,iBAAA,YAACC,GAAW,EAAEW,KAAa,EAAiB;MAC5DR,MAAM,CAACC,YAAY,CAACQ,OAAO,CAACZ,GAAG,EAAEW,KAAK,CAAC;MACvC,OAAOV,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAAA,SAHKO,YAAYA,CAAAI,GAAA,EAAAC,GAAA;MAAA,OAAAJ,aAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAZC,YAAY;EAAA;EAIZM,eAAe;IAAA,IAAAC,gBAAA,GAAAjB,iBAAA,YAACC,GAAW,EAAiB;MAChDG,MAAM,CAACC,YAAY,CAACa,UAAU,CAACjB,GAAG,CAAC;MACnC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAAA,SAHKa,eAAeA,CAAAG,GAAA;MAAA,OAAAF,gBAAA,CAAAT,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAfO,eAAe;EAAA;AAIvB,CAAC;AAsBD,IAAMI,OAAO;EAAA,IAAAC,IAAA,GAAArB,iBAAA,CAAG,aAAyC;IAErD,IAAMsB,aAAa,SAASzB,WAAW,CAACC,YAAY,CAAC,cAAc,CAAC;IACpE,IAAIwB,aAAa,EAAE;MACf,OAAOC,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;IACpC;IACA,OAAO,IAAI;EACf,CAAC;EAAA,gBAPKF,OAAOA,CAAA;IAAA,OAAAC,IAAA,CAAAb,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOZ;AAED,IAAMgB,SAAS;EAAA,IAAAC,KAAA,GAAA1B,iBAAA,CAAG,aAA2B;IAEzC,OAAOE,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B,CAAC;EAAA,gBAHKsB,SAASA,CAAA;IAAA,OAAAC,KAAA,CAAAlB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGd;AAMD,IAAMkB,WAAW,GAAG,cAAc;AAClC,IAAMC,gBAAgB,GAAG,cAAc;AACvC,IAAMC,oBAAoB,GAAG,kBAAkB;AAa/C,IAAMC,WAAW,GAAGvC,aAAa,CAA8BwC,SAAS,CAAC;AAOzE,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,KAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;EAChE,IAAAC,SAAA,GAA8C1C,QAAQ,CAAC,KAAK,CAAC;IAAA2C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,IAAAI,UAAA,GAAwB/C,QAAQ,CAAqB,IAAI,CAAC;IAAAgD,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAAkCnD,QAAQ,CAAC,IAAI,CAAC;IAAAoD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAG9B,IAAMG,eAAe;IAAA,IAAAC,KAAA,GAAAjD,iBAAA,CAAG,aAAY;MAChC,IAAI;QACA,IAAMsB,aAAa,SAASzB,WAAW,CAACC,YAAY,CAAC6B,WAAW,CAAC;QAEjE,IAAIL,aAAa,EAAE;UACf,IAAM4B,OAAoB,GAAG3B,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;UACtDiB,kBAAkB,CAAC,IAAI,CAAC;UACxBI,OAAO,CAACO,OAAO,CAAC;QACpB,CAAC,MAAM;UACHX,kBAAkB,CAAC,KAAK,CAAC;UACzBI,OAAO,CAAC,IAAI,CAAC;QACjB;MACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;QACjEZ,kBAAkB,CAAC,KAAK,CAAC;QACzBI,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,SAAS;QACNI,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAAA,gBAnBKC,eAAeA,CAAA;MAAA,OAAAC,KAAA,CAAAzC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmBpB;EAKD,IAAM4C,KAAK;IAAA,IAAAC,KAAA,GAAAtD,iBAAA,CAAG,WAAOkD,OAAoB,EAAK;MAC1C,IAAI;QACA,MAAMrD,WAAW,CAACa,YAAY,CAACiB,WAAW,EAAEJ,IAAI,CAACgC,SAAS,CAACL,OAAO,CAAC,CAAC;QACpEX,kBAAkB,CAAC,IAAI,CAAC;QACxBI,OAAO,CAACO,OAAO,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CZ,kBAAkB,CAAC,KAAK,CAAC;QACzBI,OAAO,CAAC,IAAI,CAAC;MACjB;IACJ,CAAC;IAAA,gBAVKU,KAAKA,CAAAG,GAAA;MAAA,OAAAF,KAAA,CAAA9C,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUV;EAKD,IAAMgD,MAAM;IAAA,IAAAC,KAAA,GAAA1D,iBAAA,CAAG,aAAY;MACvB,IAAI;QAEA,MAAMH,WAAW,CAACmB,eAAe,CAACW,WAAW,CAAC;QAC9C,MAAM9B,WAAW,CAACmB,eAAe,CAACY,gBAAgB,CAAC;QACnD,MAAM/B,WAAW,CAACmB,eAAe,CAACa,oBAAoB,CAAC;QACvD,MAAMhC,WAAW,CAACmB,eAAe,CAAC,qBAAqB,CAAC;QAGxD,MAAMS,SAAS,CAAC,CAAC;QAGjBc,kBAAkB,CAAC,KAAK,CAAC;QACzBI,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAAA,gBAjBKM,MAAMA,CAAA;MAAA,OAAAC,KAAA,CAAAlD,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBX;EAEDf,SAAS,CAAC,YAAM;IACZsD,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,OACIpD,IAAA,CAACkC,WAAW,CAAC6B,QAAQ;IAAC/C,KAAK,EAAE;MAAE0B,eAAe,EAAfA,eAAe;MAAEI,IAAI,EAAJA,IAAI;MAAEI,SAAS,EAATA,SAAS;MAAEO,KAAK,EAALA,KAAK;MAAEI,MAAM,EAANA;IAAO,CAAE;IAAAvB,QAAA,EAC5EA;EAAQ,CACS,CAAC;AAE/B,CAAC;AAMD,OAAO,IAAM0B,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACzB,IAAMC,OAAO,GAAGrE,UAAU,CAACsC,WAAW,CAAC;EACvC,IAAI+B,OAAO,KAAK9B,SAAS,EAAE;IACvB,MAAM,IAAI+B,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}