{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { LineChart } from 'react-native-chart-kit';\nimport { listReadings, initDB } from \"../services/dbService\";\nimport * as SecureStore from 'expo-secure-store';\nimport { useFocusEffect } from '@react-navigation/native';\nimport Svg, { Text as SvgText } from 'react-native-svg';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width;\nvar CGMChartScreen = function CGMChartScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    readings = _useState2[0],\n    setReadings = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    profile = _useState6[0],\n    setProfile = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    highlight = _useState8[0],\n    setHighlight = _useState8[1];\n  var _useState9 = useState(null),\n    _useState0 = _slicedToArray(_useState9, 2),\n    tooltip = _useState0[0],\n    setTooltip = _useState0[1];\n  useEffect(function () {\n    var initialize = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          yield initDB();\n          yield loadReadings();\n          var storedProfile = yield SecureStore.getItemAsync('user_profile');\n          if (storedProfile) setProfile(JSON.parse(storedProfile));\n        } catch (err) {\n          console.error('Erro ao inicializar:', err);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function initialize() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    initialize();\n  }, []);\n  useFocusEffect(useCallback(function () {\n    loadReadings();\n  }, []));\n  var loadReadings = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield listReadings();\n        if (!data || data.length === 0) {\n          setReadings([]);\n          return;\n        }\n        var filtered = data.filter(function (r) {\n          return r && r.measurement_time && !Number.isNaN(Number(r.glucose_level)) && Number(r.glucose_level) > 0 && Number(r.glucose_level) < 1000;\n        });\n        var normalized = filtered.map(function (r) {\n          return _objectSpread(_objectSpread({}, r), {}, {\n            glucose_level: Number(r.glucose_level),\n            measurement_time: new Date(r.measurement_time).toISOString()\n          });\n        });\n        setReadings(normalized);\n      } catch (err) {\n        console.error('Erro ao carregar leituras:', err);\n        setReadings([]);\n      }\n    });\n    return function loadReadings() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.center,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#2563eb\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Carregando gr\\xE1fico...\"\n        })]\n      })\n    });\n  }\n  if (!readings || readings.length === 0) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.center,\n        children: _jsx(Text, {\n          style: styles.emptyText,\n          children: \"Nenhuma medi\\xE7\\xE3o dispon\\xEDvel para exibir.\"\n        })\n      })\n    });\n  }\n  var ordered = readings.slice().reverse();\n  var values = ordered.map(function (r) {\n    return Number(r.glucose_level) || 0;\n  });\n  var labels = ordered.map(function (r) {\n    return new Date(r.measurement_time).toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  });\n  var highest = Math.max.apply(Math, _toConsumableArray(values));\n  var lowest = Math.min.apply(Math, _toConsumableArray(values));\n  var highestIndex = values.indexOf(highest);\n  var lowestIndex = values.indexOf(lowest);\n  var chartWidth = Math.max(screenWidth - 32, labels.length * 60);\n  var chartHeight = 260;\n  var userType = (profile == null ? void 0 : profile.type) || 'prediabetes';\n  var ranges = {\n    prediabetes: {\n      min: 70,\n      max: 180\n    },\n    tipo1: {\n      min: 80,\n      max: 150\n    },\n    tipo2: {\n      min: 90,\n      max: 160\n    }\n  };\n  var rangeForType = ranges[userType] || ranges['prediabetes'];\n  var minTarget = rangeForType.min;\n  var maxTarget = rangeForType.max;\n  var avg = values.length > 0 ? Math.round(values.reduce(function (a, b) {\n    return a + b;\n  }, 0) / values.length) : 0;\n  var toggleHighlight = function toggleHighlight(type) {\n    if ((highlight == null ? void 0 : highlight.type) === type) {\n      setHighlight(null);\n    } else {\n      setHighlight(type === 'highest' ? {\n        index: highestIndex,\n        type: type\n      } : {\n        index: lowestIndex,\n        type: type\n      });\n    }\n  };\n  var toggleTooltip = function toggleTooltip(index, x, y) {\n    if (tooltip && tooltip.index === index) {\n      setTooltip(null);\n    } else {\n      setTooltip({\n        index: index,\n        value: values[index],\n        label: labels[index],\n        x: x,\n        y: y\n      });\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.headerRow,\n      children: _jsx(Text, {\n        style: styles.pageTitle,\n        children: \"Gr\\xE1fico de Glicose\"\n      })\n    }), _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: true,\n        children: _jsx(LineChart, {\n          data: {\n            labels: [],\n            datasets: [{\n              data: values\n            }]\n          },\n          width: chartWidth,\n          height: chartHeight,\n          chartConfig: {\n            backgroundColor: '#fff',\n            backgroundGradientFrom: '#fff',\n            backgroundGradientTo: '#fff',\n            decimalPlaces: 0,\n            color: function color() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return \"rgba(37, 99, 235, \" + opacity + \")\";\n            },\n            labelColor: function labelColor() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return \"rgba(0, 0, 0, \" + opacity + \")\";\n            },\n            propsForDots: {\n              r: '5',\n              strokeWidth: '2',\n              stroke: '#fff'\n            },\n            propsForBackgroundLines: {\n              strokeWidth: '0.5',\n              stroke: '#e0e0e0'\n            }\n          },\n          bezier: true,\n          withInnerLines: true,\n          withOuterLines: true,\n          fromZero: true,\n          style: styles.chart,\n          segments: 4,\n          getDotColor: function getDotColor(_, index) {\n            if ((highlight == null ? void 0 : highlight.type) === 'highest' && index === highestIndex) {\n              return 'red';\n            }\n            if ((highlight == null ? void 0 : highlight.type) === 'lowest' && index === lowestIndex) {\n              return 'green';\n            }\n            return '#2563eb';\n          },\n          decorator: function decorator() {\n            return _jsx(Svg, {\n              children: labels.map(function (l, i) {\n                return _jsx(SvgText, {\n                  x: 40 + i / (labels.length - 1) * (chartWidth - 80),\n                  y: chartHeight - 10,\n                  fontSize: \"10\",\n                  fill: \"#444\",\n                  textAnchor: \"middle\",\n                  children: l\n                }, \"lab-\" + i);\n              })\n            });\n          },\n          onDataPointClick: function onDataPointClick(_ref3) {\n            var index = _ref3.index,\n              x = _ref3.x,\n              y = _ref3.y;\n            return toggleTooltip(index, x, y);\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.axisLabel,\n        children: \"Glicose (mg/dL)\"\n      }), tooltip && _jsxs(View, {\n        style: [styles.tooltip, {\n          left: tooltip.x - 40,\n          top: tooltip.y - 50\n        }],\n        children: [_jsxs(Text, {\n          style: styles.tooltipText,\n          children: [tooltip.value, \" mg/dL\"]\n        }), _jsx(Text, {\n          style: styles.tooltipSub,\n          children: tooltip.label\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.infoGrid,\n      children: [_jsxs(TouchableOpacity, {\n        style: [styles.infoBox, {\n          backgroundColor: '#fee2e2'\n        }],\n        onPress: function onPress() {\n          return toggleHighlight('highest');\n        },\n        children: [_jsx(Text, {\n          style: [styles.infoTitle, {\n            color: '#b91c1c'\n          }],\n          children: \"Glicemia Mais Alta\"\n        }), _jsxs(Text, {\n          style: [styles.infoValue, {\n            color: '#7f1d1d'\n          }],\n          children: [highest, \" mg/dL\"]\n        }), _jsxs(Text, {\n          style: [styles.infoSub, {\n            color: '#b91c1c'\n          }],\n          children: [\"Hor\\xE1rio: \", labels[highestIndex]]\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: [styles.infoBox, {\n          backgroundColor: '#dcfce7'\n        }],\n        onPress: function onPress() {\n          return toggleHighlight('lowest');\n        },\n        children: [_jsx(Text, {\n          style: [styles.infoTitle, {\n            color: '#15803d'\n          }],\n          children: \"Glicemia Mais Baixa\"\n        }), _jsxs(Text, {\n          style: [styles.infoValue, {\n            color: '#166534'\n          }],\n          children: [lowest, \" mg/dL\"]\n        }), _jsxs(Text, {\n          style: [styles.infoSub, {\n            color: '#15803d'\n          }],\n          children: [\"Hor\\xE1rio: \", labels[lowestIndex]]\n        })]\n      }), _jsxs(View, {\n        style: [styles.infoBox, {\n          backgroundColor: '#fef9c3'\n        }],\n        children: [_jsx(Text, {\n          style: [styles.infoTitle, {\n            color: '#b45309'\n          }],\n          children: \"Faixa de Glicose Ideal\"\n        }), _jsxs(Text, {\n          style: [styles.infoValue, {\n            color: '#92400e'\n          }],\n          children: [minTarget, \"-\", maxTarget, \" mg/dL\"]\n        }), _jsxs(Text, {\n          style: [styles.infoSub, {\n            color: '#b45309'\n          }],\n          children: [\"Intervalo recomendado para \", userType]\n        })]\n      }), _jsxs(View, {\n        style: [styles.infoBox, {\n          backgroundColor: '#dbeafe'\n        }],\n        children: [_jsx(Text, {\n          style: [styles.infoTitle, {\n            color: '#1d4ed8'\n          }],\n          children: \"Glicemia Di\\xE1ria M\\xE9dia\"\n        }), _jsxs(Text, {\n          style: [styles.infoValue, {\n            color: '#1e3a8a'\n          }],\n          children: [avg, \" mg/dL\"]\n        }), _jsx(Text, {\n          style: [styles.infoSub, {\n            color: '#1d4ed8'\n          }],\n          children: \"Calculada automaticamente\"\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f0f6ff'\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12\n  },\n  pageTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#111'\n  },\n  chartTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 8\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 12,\n    marginBottom: 20,\n    elevation: 2\n  },\n  chart: {\n    marginVertical: 8,\n    borderRadius: 12\n  },\n  axisLabel: {\n    marginTop: 6,\n    fontSize: 13,\n    fontWeight: '500',\n    color: '#2563eb',\n    textAlign: 'center'\n  },\n  tooltip: {\n    position: 'absolute',\n    backgroundColor: '#111',\n    padding: 6,\n    borderRadius: 6,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  tooltipText: {\n    color: '#fff',\n    fontSize: 13,\n    fontWeight: 'bold'\n  },\n  tooltipSub: {\n    color: '#ddd',\n    fontSize: 11,\n    marginTop: 2\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginTop: 12\n  },\n  infoBox: {\n    flexBasis: '48%',\n    padding: 12,\n    borderRadius: 12,\n    marginBottom: 12\n  },\n  infoTitle: {\n    fontSize: 13,\n    fontWeight: '600'\n  },\n  infoValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 4\n  },\n  infoSub: {\n    fontSize: 11,\n    marginTop: 2\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 8,\n    fontSize: 14,\n    color: '#555'\n  },\n  emptyText: {\n    fontSize: 14,\n    color: '#555'\n  }\n});\nexport default CGMChartScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","Dimensions","StyleSheet","ActivityIndicator","ScrollView","TouchableOpacity","SafeAreaView","LineChart","listReadings","initDB","SecureStore","useFocusEffect","Svg","SvgText","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","CGMChartScreen","_useState","_useState2","_slicedToArray","readings","setReadings","_useState3","_useState4","loading","setLoading","_useState5","_useState6","profile","setProfile","_useState7","_useState8","highlight","setHighlight","_useState9","_useState0","tooltip","setTooltip","initialize","_ref","_asyncToGenerator","loadReadings","storedProfile","getItemAsync","JSON","parse","err","console","error","apply","arguments","_ref2","data","length","filtered","filter","r","measurement_time","Number","isNaN","glucose_level","normalized","map","_objectSpread","Date","toISOString","style","styles","container","children","center","size","color","loadingText","emptyText","ordered","slice","reverse","values","labels","toLocaleTimeString","hour","minute","highest","Math","max","_toConsumableArray","lowest","min","highestIndex","indexOf","lowestIndex","chartWidth","chartHeight","userType","type","ranges","prediabetes","tipo1","tipo2","rangeForType","minTarget","maxTarget","avg","round","reduce","a","b","toggleHighlight","index","toggleTooltip","x","y","value","label","headerRow","pageTitle","card","horizontal","showsHorizontalScrollIndicator","datasets","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","undefined","labelColor","propsForDots","strokeWidth","stroke","propsForBackgroundLines","bezier","withInnerLines","withOuterLines","fromZero","chart","segments","getDotColor","_","decorator","l","i","fontSize","fill","textAnchor","onDataPointClick","_ref3","axisLabel","left","top","tooltipText","tooltipSub","infoGrid","infoBox","onPress","infoTitle","infoValue","infoSub","create","flex","padding","flexDirection","justifyContent","marginBottom","fontWeight","chartTitle","borderRadius","elevation","marginVertical","marginTop","textAlign","position","minWidth","alignItems","flexWrap","flexBasis"],"sources":["C:/Users/Usuário/Desktop/glucocare/src/screens/ChartsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Dimensions,\n  StyleSheet,\n  ActivityIndicator,\n  ScrollView,\n  TouchableOpacity,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { LineChart } from 'react-native-chart-kit';\nimport { listReadings, initDB } from '../services/dbService';\nimport * as SecureStore from 'expo-secure-store';\nimport { useFocusEffect } from '@react-navigation/native';\nimport Svg, { Text as SvgText } from 'react-native-svg';\n\nconst screenWidth = Dimensions.get('window').width;\n\ninterface Reading {\n  glucose_level: number;\n  measurement_time: string;\n}\n\n// CORREÇÃO 1: Definição do tipo para as chaves do objeto 'ranges'\ntype ProfileTypeKey = 'prediabetes' | 'tipo1' | 'tipo2';\n\nconst CGMChartScreen: React.FC = () => {\n  const [readings, setReadings] = useState<Reading[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [profile, setProfile] = useState<any>(null);\n  const [highlight, setHighlight] = useState<any>(null);\n  const [tooltip, setTooltip] = useState<any>(null);\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        await initDB();\n        await loadReadings();\n        const storedProfile = await SecureStore.getItemAsync('user_profile');\n        if (storedProfile) setProfile(JSON.parse(storedProfile));\n      } catch (err) {\n        console.error('Erro ao inicializar:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initialize();\n  }, []);\n\n  useFocusEffect(\n    useCallback(() => {\n      loadReadings();\n    }, [])\n  );\n\n  const loadReadings = async () => {\n    try {\n      const data = await listReadings();\n      if (!data || data.length === 0) {\n        setReadings([]);\n        return;\n      }\n      const filtered = data.filter(\n        (r: any) =>\n          r &&\n          r.measurement_time &&\n          !Number.isNaN(Number(r.glucose_level)) &&\n          Number(r.glucose_level) > 0 &&\n          Number(r.glucose_level) < 1000\n      );\n      const normalized = filtered.map((r: any) => ({\n        ...r,\n        glucose_level: Number(r.glucose_level),\n        measurement_time: new Date(r.measurement_time).toISOString(),\n      }));\n      setReadings(normalized);\n    } catch (err) {\n      console.error('Erro ao carregar leituras:', err);\n      setReadings([]);\n    }\n  };\n\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.center}>\n          <ActivityIndicator size=\"large\" color=\"#2563eb\" />\n          <Text style={styles.loadingText}>Carregando gráfico...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  if (!readings || readings.length === 0) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.center}>\n          <Text style={styles.emptyText}>\n            Nenhuma medição disponível para exibir.\n          </Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  const ordered = readings.slice().reverse();\n  const values = ordered.map((r) => Number(r.glucose_level) || 0);\n\n  const labels = ordered.map((r) =>\n    new Date(r.measurement_time).toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit',\n    })\n  );\n\n  const highest = Math.max(...values);\n  const lowest = Math.min(...values);\n  const highestIndex = values.indexOf(highest);\n  const lowestIndex = values.indexOf(lowest);\n\n  const chartWidth = Math.max(screenWidth - 32, labels.length * 60);\n  const chartHeight = 260;\n\n  // CORREÇÃO 1: Usa o novo tipo ProfileTypeKey para userType e ranges\n  const userType: ProfileTypeKey = (profile?.type || 'prediabetes') as ProfileTypeKey;\n  const ranges: Record<ProfileTypeKey, { min: number; max: number }> = {\n    prediabetes: { min: 70, max: 180 },\n    tipo1: { min: 80, max: 150 },\n    tipo2: { min: 90, max: 160 },\n  };\n  const rangeForType = ranges[userType] || ranges['prediabetes'];\n  const minTarget = rangeForType.min;\n  const maxTarget = rangeForType.max;\n\n  const avg =\n    values.length > 0\n      ? Math.round(values.reduce((a, b) => a + b, 0) / values.length)\n      : 0;\n\n  const toggleHighlight = (type: string) => {\n    if (highlight?.type === type) {\n      setHighlight(null);\n    } else {\n      setHighlight(\n        type === 'highest'\n          ? { index: highestIndex, type }\n          : { index: lowestIndex, type }\n      );\n    }\n  };\n\n  const toggleTooltip = (index: number, x: number, y: number) => {\n    if (tooltip && tooltip.index === index) {\n      setTooltip(null);\n    } else {\n      setTooltip({\n        index,\n        value: values[index],\n        label: labels[index],\n        x,\n        y,\n      });\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.headerRow}>\n        <Text style={styles.pageTitle}>Gráfico de Glicose</Text>\n      </View>\n\n      <View style={styles.card}>\n        <ScrollView horizontal showsHorizontalScrollIndicator>\n          <LineChart\n            data={{ labels: [], datasets: [{ data: values }] }} // Não exibindo labels no eixo X\n            width={chartWidth}\n            height={chartHeight}\n            chartConfig={{\n              backgroundColor: '#fff',\n              backgroundGradientFrom: '#fff',\n              backgroundGradientTo: '#fff',\n              decimalPlaces: 0,\n              color: (opacity = 1) => `rgba(37, 99, 235, ${opacity})`,\n              labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n              propsForDots: {\n                r: '5',\n                strokeWidth: '2',\n                stroke: '#fff',\n              },\n              propsForBackgroundLines: {\n                strokeWidth: '0.5',\n                stroke: '#e0e0e0',\n              },\n            }}\n            bezier\n            withInnerLines\n            withOuterLines\n            fromZero\n            style={styles.chart}\n            segments={4}\n            // CORREÇÃO 2: Usa _ para indicar que dataPoint não é usado\n            getDotColor={(_, index) => { \n              if (highlight?.type === 'highest' && index === highestIndex) {\n                return 'red';\n              }\n              if (highlight?.type === 'lowest' && index === lowestIndex) {\n                return 'green';\n              }\n              return '#2563eb';\n            }}\n            decorator={() => (\n              <Svg>\n                {labels.map((l, i) => (\n                  <SvgText\n                    key={`lab-${i}`}\n                    x={40 + (i / (labels.length - 1)) * (chartWidth - 80)}\n                    y={chartHeight - 10} // Posicionando as horas abaixo das bolinhas\n                    fontSize=\"10\"\n                    fill=\"#444\"\n                    textAnchor=\"middle\"\n                  >\n                    {l}\n                  </SvgText>\n                ))}\n              </Svg>\n            )}\n            onDataPointClick={({ index, x, y }) => toggleTooltip(index, x, y)}\n          />\n        </ScrollView>\n        <Text style={styles.axisLabel}>Glicose (mg/dL)</Text>\n\n        {tooltip && (\n          <View\n            style={[\n              styles.tooltip,\n              { left: tooltip.x - 40, top: tooltip.y - 50 },\n            ]}\n          >\n            <Text style={styles.tooltipText}>{tooltip.value} mg/dL</Text>\n            <Text style={styles.tooltipSub}>{tooltip.label}</Text>\n          </View>\n        )}\n      </View>\n\n      <View style={styles.infoGrid}>\n        <TouchableOpacity\n          style={[styles.infoBox, { backgroundColor: '#fee2e2' }]}\n          onPress={() => toggleHighlight('highest')}\n        >\n          <Text style={[styles.infoTitle, { color: '#b91c1c' }]}>\n            Glicemia Mais Alta\n          </Text>\n          <Text style={[styles.infoValue, { color: '#7f1d1d' }]}>{highest} mg/dL</Text>\n          <Text style={[styles.infoSub, { color: '#b91c1c' }]}>\n            Horário: {labels[highestIndex]}\n          </Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={[styles.infoBox, { backgroundColor: '#dcfce7' }]}\n          onPress={() => toggleHighlight('lowest')}\n        >\n          <Text style={[styles.infoTitle, { color: '#15803d' }]}>\n            Glicemia Mais Baixa\n          </Text>\n          <Text style={[styles.infoValue, { color: '#166534' }]}>{lowest} mg/dL</Text>\n          <Text style={[styles.infoSub, { color: '#15803d' }]}>\n            Horário: {labels[lowestIndex]}\n          </Text>\n        </TouchableOpacity>\n\n        <View style={[styles.infoBox, { backgroundColor: '#fef9c3' }]}>\n          <Text style={[styles.infoTitle, { color: '#b45309' }]}>\n            Faixa de Glicose Ideal\n          </Text>\n          <Text style={[styles.infoValue, { color: '#92400e' }]}>\n            {minTarget}-{maxTarget} mg/dL\n          </Text>\n          <Text style={[styles.infoSub, { color: '#b45309' }]}>\n            Intervalo recomendado para {userType}\n          </Text>\n        </View>\n\n        <View style={[styles.infoBox, { backgroundColor: '#dbeafe' }]}>\n          <Text style={[styles.infoTitle, { color: '#1d4ed8' }]}>\n            Glicemia Diária Média\n          </Text>\n          <Text style={[styles.infoValue, { color: '#1e3a8a' }]}>{avg} mg/dL</Text>\n          <Text style={[styles.infoSub, { color: '#1d4ed8' }]}>\n            Calculada automaticamente\n          </Text>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, backgroundColor: '#f0f6ff' },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n  },\n  pageTitle: { fontSize: 22, fontWeight: 'bold', color: '#111' },\n  chartTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 8,\n  },\n\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 12,\n    marginBottom: 20,\n    elevation: 2,\n  },\n  chart: { marginVertical: 8, borderRadius: 12 },\n  axisLabel: {\n    marginTop: 6,\n    fontSize: 13,\n    fontWeight: '500',\n    color: '#2563eb',\n    textAlign: 'center',\n  },\n\n  tooltip: {\n    position: 'absolute',\n    backgroundColor: '#111',\n    padding: 6,\n    borderRadius: 6,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  tooltipText: { color: '#fff', fontSize: 13, fontWeight: 'bold' },\n  tooltipSub: { color: '#ddd', fontSize: 11, marginTop: 2 },\n\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginTop: 12,\n  },\n  infoBox: {\n    flexBasis: '48%',\n    padding: 12,\n    borderRadius: 12,\n    marginBottom: 12,\n  },\n  infoTitle: { fontSize: 13, fontWeight: '600' },\n  infoValue: { fontSize: 18, fontWeight: 'bold', marginTop: 4 },\n  infoSub: { fontSize: 11, marginTop: 2 },\n\n  center: { flex: 1, justifyContent: 'center', alignItems: 'center' },\n  loadingText: { marginTop: 8, fontSize: 14, color: '#555' },\n  emptyText: { fontSize: 14, color: '#555' },\n});\n\nexport default CGMChartScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}