rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ==================================================================
    // REGRAS PARA USUÁRIOS (users)
    // ==================================================================
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // ==================================================================
      // REGRAS PARA LEITURAS DE GLICOSE (subcoleção readings)
      // ==================================================================
      match /readings/{readingId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
        allow update: if request.auth != null && request.auth.uid == userId;
        allow delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // ==================================================================
    // REGRAS PARA RELATÓRIOS (reports)
    // ==================================================================
    match /reports/{reportId} {
      allow read: if request.auth != null && 
                     resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
                       request.resource.data.user_id == request.auth.uid;
      allow update: if request.auth != null && 
                       resource.data.user_id == request.auth.uid;
      allow delete: if request.auth != null && 
                       resource.data.user_id == request.auth.uid;
    }
    
    // ==================================================================
    // REGRAS PARA NOTIFICAÇÕES (notifications)
    // ==================================================================
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
                     resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
                       request.resource.data.user_id == request.auth.uid;
      allow update: if request.auth != null && 
                       resource.data.user_id == request.auth.uid;
      allow delete: if request.auth != null && 
                       resource.data.user_id == request.auth.uid;
    }
    
    // ==================================================================
    // REGRAS PARA SINCRONIZAÇÃO (sync_meta)
    // ==================================================================
    match /sync_meta/{syncId} {
      allow read: if request.auth != null && request.auth.uid == syncId;
      allow write: if request.auth != null && request.auth.uid == syncId;
    }
    
    // ==================================================================
    // REGRAS PARA DESENVOLVIMENTO (REMOVER EM PRODUÇÃO)
    // ==================================================================
    // ⚠️ APENAS PARA DESENVOLVIMENTO - REMOVER EM PRODUÇÃO
    // Descomente a linha abaixo APENAS durante desenvolvimento
    // match /{document=**} { allow read, write: if true; }
  }
}
